(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    202449,       4107]
NotebookOptionsPosition[    199623,       4016]
NotebookOutlinePosition[    200017,       4033]
CellTagsIndexPosition[    199974,       4030]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "is", " ", "necessary", " ", "for", " ", "removing", " ", 
    "previously", " ", "defined", " ", "variables"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{3.636297543973466*^9}],

Cell[CellGroupData[{

Cell["Misc Modules", "Section",
 CellChangeTimes->{{3.6325726345389147`*^9, 3.632572675432233*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eps", " ", "=", " ", 
   RowBox[{"10", "^", 
    RowBox[{"-", "6"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.634554737024736*^9, 3.6345547580943823`*^9}, {
  3.6345706141867733`*^9, 3.6345706172623158`*^9}, {3.6345707638646097`*^9, 
  3.63457076606697*^9}, {3.635095474710211*^9, 3.635095493225101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cosExpansion", "[", "x_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"x", "^", "2"}], "/", "2"}], "+", 
    RowBox[{
     RowBox[{"x", "^", "4"}], "/", "24"}], "-", 
    RowBox[{
     RowBox[{"x", "^", "6"}], "/", "720"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.634554737024736*^9, 3.6345547580943823`*^9}, {
   3.6345706141867733`*^9, 3.6345706172623158`*^9}, {3.6345707638646097`*^9, 
   3.63457076606697*^9}, 3.635095474710211*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"stripList", "[", "lst_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "lst2", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lst2", " ", "=", " ", 
      RowBox[{"List", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"lst2", ",", 
         RowBox[{"Last", "[", 
          RowBox[{"lst", "[", 
           RowBox[{"[", "ii", "]"}], "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"Length", "[", "lst", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "lst2", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6301007913444843`*^9, {3.630100848386307*^9, 3.6301008889363422`*^9}, {
   3.6301010585364017`*^9, 3.630101163612708*^9}, {3.63010132715949*^9, 
   3.630101350628871*^9}, {3.630101434153866*^9, 3.630101705589897*^9}, {
   3.630101750524371*^9, 3.6301017981900587`*^9}, {3.6301018580554533`*^9, 
   3.630101871252617*^9}, {3.6301019569643*^9, 3.6301019865043716`*^9}, {
   3.6301020394493933`*^9, 3.63010204651302*^9}, {3.630102076588862*^9, 
   3.630102086292461*^9}, {3.6301021616415052`*^9, 3.630102170105464*^9}, {
   3.630102214489914*^9, 3.6301022356372223`*^9}, {3.6301024048609457`*^9, 
   3.630102406853269*^9}, {3.630102444300276*^9, 3.63010244444254*^9}, {
   3.6301026165609007`*^9, 3.630102632497952*^9}, {3.630103335799355*^9, 
   3.6301033858609457`*^9}, 3.631203255751425*^9, {3.631204487745455*^9, 
   3.631204541126915*^9}, {3.631204578781621*^9, 3.631204618514708*^9}, {
   3.631204798123405*^9, 3.631204804473257*^9}, {3.631206750098632*^9, 
   3.6312067905601397`*^9}, {3.631207548170205*^9, 3.631207571639567*^9}, {
   3.631300040558062*^9, 3.6313000944583607`*^9}, {3.631300261986643*^9, 
   3.631300264851232*^9}, 3.631370430850511*^9, {3.631376844040513*^9, 
   3.6313769208989553`*^9}, {3.631377033134266*^9, 3.631377037285449*^9}, {
   3.631377083155622*^9, 3.631377178734151*^9}, {3.6313772525322533`*^9, 
   3.631377257210475*^9}, 3.631377470375277*^9, {3.631377582147644*^9, 
   3.631377645190914*^9}, {3.631377694039156*^9, 3.631377715172462*^9}, {
   3.631377747860551*^9, 3.631377799320774*^9}, {3.6313778828074837`*^9, 
   3.631377885268388*^9}, {3.6313779762981787`*^9, 3.631377993897191*^9}, {
   3.631378842240246*^9, 3.631378893411298*^9}, {3.6313789333832684`*^9, 
   3.6313789365854797`*^9}, {3.6313789703201227`*^9, 3.631378996862191*^9}, {
   3.6313790374137983`*^9, 3.631379038676128*^9}, {3.631379327041008*^9, 
   3.631379336637561*^9}, {3.631379479887459*^9, 3.631379515596889*^9}, {
   3.631379567797516*^9, 3.631379585929515*^9}, 3.631379656422068*^9, {
   3.6313798024776897`*^9, 3.6313798178944273`*^9}, {3.631379972217153*^9, 
   3.631379976333065*^9}, {3.631448530314064*^9, 3.631448661381894*^9}, {
   3.6314487499277573`*^9, 3.63144882459037*^9}, {3.631448927088253*^9, 
   3.631448936788054*^9}, {3.6314638466466618`*^9, 3.631463857791938*^9}, {
   3.631463896670168*^9, 3.631463902371943*^9}, 3.631463948970786*^9, {
   3.631463979425815*^9, 3.631463995736273*^9}, {3.6314640336494827`*^9, 
   3.6314641200991488`*^9}, {3.6314642208727217`*^9, 
   3.6314642450517178`*^9}, {3.631469799644857*^9, 3.63146996964507*^9}, 
   3.6314710681730747`*^9, 3.631471119525909*^9, {3.631471172941272*^9, 
   3.631471200337368*^9}, {3.631471613453528*^9, 3.6314716277399473`*^9}, {
   3.631471855417693*^9, 3.631471896199479*^9}, {3.631471934685771*^9, 
   3.6314719642932873`*^9}, {3.6318004010657663`*^9, 3.631800402217058*^9}, {
   3.631801609140139*^9, 3.631801612772214*^9}, {3.631801715566955*^9, 
   3.631801724464323*^9}, {3.6318019823802423`*^9, 3.631802008539989*^9}, {
   3.631804265907633*^9, 3.631804277708551*^9}, {3.6318045989651003`*^9, 
   3.631804605194875*^9}, {3.632415166646401*^9, 3.6324153031299067`*^9}, {
   3.6324155932778683`*^9, 3.632415633972732*^9}, {3.632415784755131*^9, 
   3.632415911518207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", "=", 
  RowBox[{"List", "[", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"stripList", "[", "a", "]"}]}], "Input",
 CellChangeTimes->{{3.632415325268508*^9, 3.6324153461917*^9}, {
  3.632415378022562*^9, 3.6324154087387953`*^9}, {3.632415439489373*^9, 
  3.632415494536655*^9}, {3.632415538201552*^9, 3.6324155384823837`*^9}, {
  3.6324156932664547`*^9, 3.632415696788106*^9}, {3.6324157474932003`*^9, 
  3.632415753633692*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.635259652592841*^9, 3.635261524169135*^9, 
  3.636297043016144*^9, 3.636411883048689*^9, 3.636455498022484*^9, 
  3.636456470167687*^9, 3.6364659161341248`*^9, 3.636466191897188*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.635259652592841*^9, 3.635261524169135*^9, 
  3.636297043016144*^9, 3.636411883048689*^9, 3.636455498022484*^9, 
  3.636456470167687*^9, 3.6364659161341248`*^9, 3.636466191905039*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Write", " ", "Module", " ", "to", " ", "Count", " ", "number", " ", "of", 
    " ", "roots", " ", "in", " ", "a", " ", "function"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"From", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"www", ".", "physicsforums", ".", "com"}], "/", "threads"}], 
      "/", "find"}], "-", "all", "-", "roots", "-", "of", "-", "an", "-", 
     "interpolating", "-", "function", "-", "in", "-", 
     RowBox[{"mathematica", 
      RowBox[{".612362", "/"}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"countZeros", "[", 
    RowBox[{"ifun_", ",", "xmin_", ",", "xmax_", ",", "dx_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zeros", ",", "numZeros"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"zeros", " ", "=", " ", 
       RowBox[{"Union", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "/.", 
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ifun", "[", "x", "]"}], "\[Equal]", "0."}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "xInit", ",", "xmin", ",", "xmax"}], "}"}]}],
              "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"xInit", ",", 
             RowBox[{"xmin", "+", "dx"}], ",", 
             RowBox[{"xmax", "-", "dx"}], ",", "dx"}], "}"}]}], "]"}], ",", 
         RowBox[{"SameTest", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"#1", "-", "#2"}], "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "4"}]}]}], "&"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numZeros", " ", "=", " ", 
       RowBox[{"Length", "[", "zeros", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "zeros", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Last", "[", "zeros", "]"}], "\[Equal]", "xmax"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ifun", "[", "xmax", "]"}], "\[NotEqual]", "0"}], ",", 
          RowBox[{"numZeros", "=", 
           RowBox[{"numZeros", "-", "1"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "zeros", "]"}], "\[Equal]", "xmin"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ifun", "[", "xmin", "]"}], "\[NotEqual]", "0"}], ",", 
          RowBox[{"numZeros", "=", 
           RowBox[{"numZeros", "-", "1"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "numZeros", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6301007913444843`*^9, {3.630100848386307*^9, 3.6301008889363422`*^9}, {
   3.6301010585364017`*^9, 3.630101163612708*^9}, {3.63010132715949*^9, 
   3.630101350628871*^9}, {3.630101434153866*^9, 3.630101705589897*^9}, {
   3.630101750524371*^9, 3.6301017981900587`*^9}, {3.6301018580554533`*^9, 
   3.630101871252617*^9}, {3.6301019569643*^9, 3.6301019865043716`*^9}, {
   3.6301020394493933`*^9, 3.63010204651302*^9}, {3.630102076588862*^9, 
   3.630102086292461*^9}, {3.6301021616415052`*^9, 3.630102170105464*^9}, {
   3.630102214489914*^9, 3.6301022356372223`*^9}, {3.6301024048609457`*^9, 
   3.630102406853269*^9}, {3.630102444300276*^9, 3.63010244444254*^9}, {
   3.6301026165609007`*^9, 3.630102632497952*^9}, {3.630103335799355*^9, 
   3.6301033858609457`*^9}, 3.631203255751425*^9, {3.631204487745455*^9, 
   3.631204541126915*^9}, {3.631204578781621*^9, 3.631204618514708*^9}, {
   3.631204798123405*^9, 3.631204804473257*^9}, {3.631206750098632*^9, 
   3.6312067905601397`*^9}, {3.631207548170205*^9, 3.631207571639567*^9}, {
   3.631300040558062*^9, 3.6313000944583607`*^9}, {3.631300261986643*^9, 
   3.631300264851232*^9}, 3.631370430850511*^9, {3.631376844040513*^9, 
   3.6313769208989553`*^9}, {3.631377033134266*^9, 3.631377037285449*^9}, {
   3.631377083155622*^9, 3.631377178734151*^9}, {3.6313772525322533`*^9, 
   3.631377257210475*^9}, 3.631377470375277*^9, {3.631377582147644*^9, 
   3.631377645190914*^9}, {3.631377694039156*^9, 3.631377715172462*^9}, {
   3.631377747860551*^9, 3.631377799320774*^9}, {3.6313778828074837`*^9, 
   3.631377885268388*^9}, {3.6313779762981787`*^9, 3.631377993897191*^9}, {
   3.631378842240246*^9, 3.631378893411298*^9}, {3.6313789333832684`*^9, 
   3.6313789365854797`*^9}, {3.6313789703201227`*^9, 3.631378996862191*^9}, {
   3.6313790374137983`*^9, 3.631379038676128*^9}, {3.631379327041008*^9, 
   3.631379336637561*^9}, {3.631379479887459*^9, 3.631379515596889*^9}, {
   3.631379567797516*^9, 3.631379585929515*^9}, 3.631379656422068*^9, {
   3.6313798024776897`*^9, 3.6313798178944273`*^9}, {3.631379972217153*^9, 
   3.631379976333065*^9}, {3.631448530314064*^9, 3.631448661381894*^9}, {
   3.6314487499277573`*^9, 3.63144882459037*^9}, {3.631448927088253*^9, 
   3.631448936788054*^9}, {3.6314638466466618`*^9, 3.631463857791938*^9}, {
   3.631463896670168*^9, 3.631463902371943*^9}, 3.631463948970786*^9, {
   3.631463979425815*^9, 3.631463995736273*^9}, {3.6314640336494827`*^9, 
   3.6314641200991488`*^9}, {3.6314642208727217`*^9, 
   3.6314642450517178`*^9}, {3.631469799644857*^9, 3.63146996964507*^9}, 
   3.6314710681730747`*^9, 3.631471119525909*^9, {3.631471172941272*^9, 
   3.631471200337368*^9}, {3.631471613453528*^9, 3.6314716277399473`*^9}, {
   3.631471855417693*^9, 3.631471896199479*^9}, {3.631471934685771*^9, 
   3.6314719642932873`*^9}, {3.6318004010657663`*^9, 3.631800402217058*^9}, {
   3.631801609140139*^9, 3.631801612772214*^9}, {3.631801715566955*^9, 
   3.631801724464323*^9}, {3.6318019823802423`*^9, 3.631802008539989*^9}, {
   3.631804265907633*^9, 3.631804277708551*^9}, {3.6318045989651003`*^9, 
   3.631804605194875*^9}, {3.632415166646401*^9, 3.632415168053048*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"x", "^", "4"}], "-", 
   RowBox[{"x", "^", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"countZeros", "[", 
  RowBox[{"f", ",", 
   RowBox[{"-", "2"}], ",", "2", ",", "0.1"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6301007913444843`*^9, {3.630100848386307*^9, 3.6301008889363422`*^9}, {
   3.6301010585364017`*^9, 3.630101163612708*^9}, {3.63010132715949*^9, 
   3.630101350628871*^9}, {3.630101434153866*^9, 3.630101705589897*^9}, {
   3.630101750524371*^9, 3.6301017981900587`*^9}, {3.6301018580554533`*^9, 
   3.630101871252617*^9}, {3.6301019569643*^9, 3.6301019865043716`*^9}, {
   3.6301020394493933`*^9, 3.63010204651302*^9}, {3.630102076588862*^9, 
   3.630102086292461*^9}, {3.6301021616415052`*^9, 3.630102170105464*^9}, {
   3.630102214489914*^9, 3.6301022356372223`*^9}, {3.6301024048609457`*^9, 
   3.630102406853269*^9}, {3.630102444300276*^9, 3.63010244444254*^9}, {
   3.6301026165609007`*^9, 3.630102632497952*^9}, {3.630103335799355*^9, 
   3.6301033858609457`*^9}, 3.631203255751425*^9, {3.631204487745455*^9, 
   3.631204541126915*^9}, {3.631204578781621*^9, 3.631204618514708*^9}, {
   3.631204798123405*^9, 3.631204804473257*^9}, {3.631206750098632*^9, 
   3.6312067905601397`*^9}, {3.631207548170205*^9, 3.631207571639567*^9}, {
   3.631300040558062*^9, 3.6313000944583607`*^9}, {3.631300261986643*^9, 
   3.631300264851232*^9}, 3.631370430850511*^9, {3.631376844040513*^9, 
   3.6313769208989553`*^9}, {3.631377033134266*^9, 3.631377037285449*^9}, {
   3.631377083155622*^9, 3.631377178734151*^9}, {3.6313772525322533`*^9, 
   3.631377257210475*^9}, 3.631377470375277*^9, {3.631377582147644*^9, 
   3.631377645190914*^9}, {3.631377694039156*^9, 3.631377715172462*^9}, {
   3.631377747860551*^9, 3.631377799320774*^9}, {3.6313778828074837`*^9, 
   3.631377885268388*^9}, {3.6313779762981787`*^9, 3.631377993897191*^9}, {
   3.631378842240246*^9, 3.631378893411298*^9}, {3.6313789333832684`*^9, 
   3.6313789365854797`*^9}, {3.6313789703201227`*^9, 3.631378996862191*^9}, {
   3.6313790374137983`*^9, 3.631379038676128*^9}, {3.631379327041008*^9, 
   3.631379336637561*^9}, {3.631379479887459*^9, 3.631379515596889*^9}, {
   3.631379567797516*^9, 3.631379585929515*^9}, 3.631379656422068*^9, {
   3.6313798024776897`*^9, 3.6313798178944273`*^9}, {3.631379972217153*^9, 
   3.631379976333065*^9}, {3.631448530314064*^9, 3.631448661381894*^9}, {
   3.6314487499277573`*^9, 3.63144882459037*^9}, {3.631448927088253*^9, 
   3.631448936788054*^9}, {3.6314638466466618`*^9, 3.631463857791938*^9}, {
   3.631463896670168*^9, 3.631463902371943*^9}, 3.631463948970786*^9, {
   3.631463979425815*^9, 3.631463995736273*^9}, {3.6314640336494827`*^9, 
   3.6314641200991488`*^9}, {3.6314642208727217`*^9, 
   3.6314642450517178`*^9}, {3.631469799644857*^9, 3.63146996964507*^9}, 
   3.6314710681730747`*^9, 3.631471119525909*^9, {3.631471172941272*^9, 
   3.631471200337368*^9}, {3.631471613453528*^9, 3.6314716277399473`*^9}, {
   3.631471855417693*^9, 3.631471896199479*^9}, {3.631471934685771*^9, 
   3.6314719642932873`*^9}, {3.6318004010657663`*^9, 3.631800402217058*^9}, {
   3.631801609140139*^9, 3.631801645225376*^9}, {3.631801675237816*^9, 
   3.631801677160256*^9}, {3.631801937196937*^9, 3.631801951107877*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.0000000000000013`"}], ",", 
   RowBox[{"-", "1.0117245497215102`*^-8"}], ",", "1.`"}], "}"}]], "Print",
 CellChangeTimes->{3.635259652660386*^9, 3.635261524265348*^9, 
  3.636297043133636*^9, 3.636411883112742*^9, 3.636455498102716*^9, 
  3.636456470255382*^9, 3.636465916220381*^9, 3.636466191982896*^9}],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.6352596526685038`*^9, 3.635261524277997*^9, 
  3.636297043144449*^9, 3.6364118831207657`*^9, 3.636455498110415*^9, 
  3.636456470263897*^9, 3.6364659162268343`*^9, 3.6364661919906397`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"countAllZeros", "[", 
   RowBox[{"ifun_", ",", "xmin_", ",", "xmax_", ",", "dx_", ",", "hardLim_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"z", ",", "ztot", ",", "num", ",", "ii"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"z", "=", 
      RowBox[{"countZeros", "[", 
       RowBox[{"ifun", ",", "xmin", ",", "xmax", ",", "dx"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<number of zeros for the function is \>\"", ",", "z"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ztot", "=", "z"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", "\[Equal]", "0"}], ",", 
       RowBox[{"num", "=", "0"}], ",", 
       RowBox[{"num", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ii", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "x_", "]"}], "=", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"ifun", "[", "x", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "ii"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", "x_", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"z", "=", 
         RowBox[{"countZeros", "[", 
          RowBox[{"f", ",", "xmin", ",", "xmax", ",", "dx"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<number of zeros for \>\"", ",", "ii", ",", 
          "\"\<th derivative is \>\"", ",", "z"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ztot", "=", 
         RowBox[{"ztot", "+", "z"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"z", "\[Equal]", "0"}], ",", 
          RowBox[{"num", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"num", "\[GreaterEqual]", "2"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ii", "\[GreaterEqual]", "hardLim"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ii", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ztot", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6301007913444843`*^9, {3.630100848386307*^9, 3.6301008889363422`*^9}, {
   3.6301010585364017`*^9, 3.630101163612708*^9}, {3.63010132715949*^9, 
   3.630101350628871*^9}, {3.630101434153866*^9, 3.630101705589897*^9}, {
   3.630101750524371*^9, 3.6301017981900587`*^9}, {3.6301018580554533`*^9, 
   3.630101871252617*^9}, {3.6301019569643*^9, 3.6301019865043716`*^9}, {
   3.6301020394493933`*^9, 3.63010204651302*^9}, {3.630102076588862*^9, 
   3.630102086292461*^9}, {3.6301021616415052`*^9, 3.630102170105464*^9}, {
   3.630102214489914*^9, 3.6301022356372223`*^9}, {3.6301024048609457`*^9, 
   3.630102406853269*^9}, {3.630102444300276*^9, 3.63010244444254*^9}, {
   3.6301026165609007`*^9, 3.630102632497952*^9}, {3.630103335799355*^9, 
   3.6301033858609457`*^9}, 3.631203255751425*^9, {3.631204487745455*^9, 
   3.631204541126915*^9}, {3.631204578781621*^9, 3.631204618514708*^9}, {
   3.631204798123405*^9, 3.631204804473257*^9}, {3.631206750098632*^9, 
   3.6312067905601397`*^9}, {3.631207548170205*^9, 3.631207571639567*^9}, {
   3.631300040558062*^9, 3.6313000944583607`*^9}, {3.631300261986643*^9, 
   3.631300264851232*^9}, 3.631370430850511*^9, {3.631376844040513*^9, 
   3.6313769208989553`*^9}, {3.631377033134266*^9, 3.631377037285449*^9}, {
   3.631377083155622*^9, 3.631377178734151*^9}, {3.6313772525322533`*^9, 
   3.631377257210475*^9}, 3.631377470375277*^9, {3.631377582147644*^9, 
   3.631377645190914*^9}, {3.631377694039156*^9, 3.631377715172462*^9}, {
   3.631377747860551*^9, 3.631377799320774*^9}, {3.6313778828074837`*^9, 
   3.631377885268388*^9}, {3.6313779762981787`*^9, 3.631377993897191*^9}, {
   3.631378842240246*^9, 3.631378893411298*^9}, {3.6313789333832684`*^9, 
   3.6313789365854797`*^9}, {3.6313789703201227`*^9, 3.631378996862191*^9}, {
   3.6313790374137983`*^9, 3.631379038676128*^9}, {3.631379327041008*^9, 
   3.631379336637561*^9}, {3.631379479887459*^9, 3.631379515596889*^9}, {
   3.631379567797516*^9, 3.631379585929515*^9}, 3.631379656422068*^9, {
   3.6313798024776897`*^9, 3.6313798178944273`*^9}, {3.631379972217153*^9, 
   3.631379976333065*^9}, {3.631448530314064*^9, 3.631448661381894*^9}, {
   3.6314487499277573`*^9, 3.63144882459037*^9}, {3.631448927088253*^9, 
   3.631448936788054*^9}, {3.6314638466466618`*^9, 3.631463857791938*^9}, {
   3.631463896670168*^9, 3.631463902371943*^9}, 3.631463948970786*^9, {
   3.631463979425815*^9, 3.631463995736273*^9}, {3.6314640336494827`*^9, 
   3.6314641200991488`*^9}, {3.6314642208727217`*^9, 
   3.6314642450517178`*^9}, {3.631469799644857*^9, 3.63146996964507*^9}, 
   3.6314710681730747`*^9, 3.631471119525909*^9, {3.631471172941272*^9, 
   3.631471200337368*^9}, {3.631471613453528*^9, 3.6314716277399473`*^9}, {
   3.631471855417693*^9, 3.631471896199479*^9}, {3.631471934685771*^9, 
   3.6314719642932873`*^9}, {3.6318004010657663`*^9, 
   3.6318008223395767`*^9}, {3.631800872361885*^9, 3.6318009557235518`*^9}, {
   3.631801104622676*^9, 3.631801136299205*^9}, {3.631801178186408*^9, 
   3.6318012013684893`*^9}, {3.631801242968238*^9, 3.631801284624988*^9}, {
   3.631802086351089*^9, 3.631802113804233*^9}, {3.631802177114675*^9, 
   3.631802211348385*^9}, {3.631802624805231*^9, 3.631802644833816*^9}, {
   3.631803266509959*^9, 3.631803291866222*^9}, {3.631806270205084*^9, 
   3.631806270387207*^9}, {3.631806707426407*^9, 3.631806723505767*^9}, {
   3.632065625738885*^9, 3.632065641122322*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"x", "^", "4"}], "-", 
   RowBox[{"x", "^", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"countAllZeros", "[", 
  RowBox[{"f", ",", 
   RowBox[{"-", "10"}], ",", "10", ",", "0.1", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.6301007913444843`*^9, {3.630100848386307*^9, 3.6301008889363422`*^9}, {
   3.6301010585364017`*^9, 3.630101163612708*^9}, {3.63010132715949*^9, 
   3.630101350628871*^9}, {3.630101434153866*^9, 3.630101705589897*^9}, {
   3.630101750524371*^9, 3.6301017981900587`*^9}, {3.6301018580554533`*^9, 
   3.630101871252617*^9}, {3.6301019569643*^9, 3.6301019865043716`*^9}, {
   3.6301020394493933`*^9, 3.63010204651302*^9}, {3.630102076588862*^9, 
   3.630102086292461*^9}, {3.6301021616415052`*^9, 3.630102170105464*^9}, {
   3.630102214489914*^9, 3.6301022356372223`*^9}, {3.6301024048609457`*^9, 
   3.630102406853269*^9}, {3.630102444300276*^9, 3.63010244444254*^9}, {
   3.6301026165609007`*^9, 3.630102632497952*^9}, {3.630103335799355*^9, 
   3.6301033858609457`*^9}, 3.631203255751425*^9, {3.631204487745455*^9, 
   3.631204541126915*^9}, {3.631204578781621*^9, 3.631204618514708*^9}, {
   3.631204798123405*^9, 3.631204804473257*^9}, {3.631206750098632*^9, 
   3.6312067905601397`*^9}, {3.631207548170205*^9, 3.631207571639567*^9}, {
   3.631300040558062*^9, 3.6313000944583607`*^9}, {3.631300261986643*^9, 
   3.631300264851232*^9}, 3.631370430850511*^9, {3.631376844040513*^9, 
   3.6313769208989553`*^9}, {3.631377033134266*^9, 3.631377037285449*^9}, {
   3.631377083155622*^9, 3.631377178734151*^9}, {3.6313772525322533`*^9, 
   3.631377257210475*^9}, 3.631377470375277*^9, {3.631377582147644*^9, 
   3.631377645190914*^9}, {3.631377694039156*^9, 3.631377715172462*^9}, {
   3.631377747860551*^9, 3.631377799320774*^9}, {3.6313778828074837`*^9, 
   3.631377885268388*^9}, {3.6313779762981787`*^9, 3.631377993897191*^9}, {
   3.631378842240246*^9, 3.631378893411298*^9}, {3.6313789333832684`*^9, 
   3.6313789365854797`*^9}, {3.6313789703201227`*^9, 3.631378996862191*^9}, {
   3.6313790374137983`*^9, 3.631379038676128*^9}, {3.631379327041008*^9, 
   3.631379336637561*^9}, {3.631379479887459*^9, 3.631379515596889*^9}, {
   3.631379567797516*^9, 3.631379585929515*^9}, 3.631379656422068*^9, {
   3.6313798024776897`*^9, 3.6313798178944273`*^9}, {3.631379972217153*^9, 
   3.631379976333065*^9}, {3.631448530314064*^9, 3.631448661381894*^9}, {
   3.6314487499277573`*^9, 3.63144882459037*^9}, {3.631448927088253*^9, 
   3.631448936788054*^9}, {3.6314638466466618`*^9, 3.631463857791938*^9}, {
   3.631463896670168*^9, 3.631463902371943*^9}, 3.631463948970786*^9, {
   3.631463979425815*^9, 3.631463995736273*^9}, {3.6314640336494827`*^9, 
   3.6314641200991488`*^9}, {3.6314642208727217`*^9, 
   3.6314642450517178`*^9}, {3.631469799644857*^9, 3.63146996964507*^9}, 
   3.6314710681730747`*^9, 3.631471119525909*^9, {3.631471172941272*^9, 
   3.631471200337368*^9}, {3.631471613453528*^9, 3.6314716277399473`*^9}, {
   3.631471855417693*^9, 3.631471896199479*^9}, {3.631471934685771*^9, 
   3.6314719642932873`*^9}, {3.6318004010657663`*^9, 
   3.6318008223395767`*^9}, {3.631800872361885*^9, 3.6318009557235518`*^9}, {
   3.631801104622676*^9, 3.631801136299205*^9}, {3.631801178186408*^9, 
   3.6318012013684893`*^9}, {3.631801242968238*^9, 3.6318013263613863`*^9}, {
   3.63180145539819*^9, 3.6318014685708942`*^9}, {3.631801588410222*^9, 
   3.631801590884554*^9}, {3.631802029440987*^9, 3.6318020399037237`*^9}, {
   3.631806729449765*^9, 3.631806730520248*^9}, 3.631807187020823*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.0000000000000036`"}], ",", 
   RowBox[{"-", "1.0117245497214895`*^-8"}], ",", "1.`"}], "}"}]], "Print",
 CellChangeTimes->{3.635259652809317*^9, 3.635261524400228*^9, 
  3.6362970432469883`*^9, 3.636411883211549*^9, 3.636455498233667*^9, 
  3.636456470356258*^9, 3.636465916353269*^9, 3.636466192130052*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"number of zeros for the function is \"\>", "\[InvisibleSpace]",
    "3"}],
  SequenceForm["number of zeros for the function is ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.635259652809317*^9, 3.635261524400228*^9, 
  3.6362970432469883`*^9, 3.636411883211549*^9, 3.636455498233667*^9, 
  3.636456470356258*^9, 3.636465916353269*^9, 3.636466192136181*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.707106781186551`"}], ",", 
   RowBox[{"-", "1.1715524451711042`*^-19"}], ",", "0.7071067811865475`"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.635259652809317*^9, 3.635261524400228*^9, 
  3.6362970432469883`*^9, 3.636411883211549*^9, 3.636455498233667*^9, 
  3.636456470356258*^9, 3.636465916353269*^9, 3.636466192197824*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"number of zeros for \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\"th derivative is \"\>", "\[InvisibleSpace]", 
   "3"}],
  SequenceForm["number of zeros for ", 1, "th derivative is ", 3],
  Editable->False]], "Print",
 CellChangeTimes->{3.635259652809317*^9, 3.635261524400228*^9, 
  3.6362970432469883`*^9, 3.636411883211549*^9, 3.636455498233667*^9, 
  3.636456470356258*^9, 3.636465916353269*^9, 3.636466192206061*^9}]
}, Open  ]],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.635259652894606*^9, 3.6352615244948473`*^9, 
  3.636297043343534*^9, 3.636411883294516*^9, 3.6364554983106623`*^9, 
  3.636456470440366*^9, 3.63646591643226*^9, 3.636466192213655*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"inflectionShift", "[", 
   RowBox[{"fun_", ",", "funpp_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fun2", ",", "xi"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xi", " ", "=", " ", 
      RowBox[{"Min", "[", 
       RowBox[{"x", "/.", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"funpp", "[", "x", "]"}], "\[Equal]", "0"}], ",", "x"}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fun2", "[", "x_", "]"}], "=", 
      RowBox[{"fun", "[", 
       RowBox[{"x", "+", "xi"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "fun2", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.635258841640377*^9, 3.63525890164036*^9}, {
  3.635259043323094*^9, 3.6352590725766163`*^9}, {3.635259512639937*^9, 
  3.6352595719889517`*^9}, {3.635259846603375*^9, 3.635259854844108*^9}, {
  3.635260293625239*^9, 3.6352603035786*^9}, {3.635261511504922*^9, 
  3.635261511820529*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "4"}], "-", 
    RowBox[{"x", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   RowBox[{"inflectionShift", "[", 
    RowBox[{"f", ",", 
     RowBox[{"f", "''"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"f2", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.635259659185864*^9, 3.635259721247958*^9}, {
  3.63525977290351*^9, 3.63525983429849*^9}, {3.63525995831532*^9, 
  3.635259960627747*^9}, {3.6352602260702047`*^9, 3.635260245374949*^9}, {
  3.635260313832679*^9, 3.6352603337798243`*^9}, {3.635260980815297*^9, 
  3.635260981177919*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ASJOFOQ=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
wP8AHzL3Ag==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.24999999544833568`, 0.3233668641456764}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.635259811654636*^9, 3.63525985830188*^9}, 
   3.635259963054594*^9, {3.635260229431456*^9, 3.635260246589583*^9}, {
   3.63526029786976*^9, 3.635260334966317*^9}, 3.635260982078821*^9, 
   3.63526152458782*^9, 3.636297043535759*^9, 3.6364118833702507`*^9, 
   3.636455498391267*^9, 3.636456470610341*^9, 3.636465916643491*^9, 
   3.636466192272189*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"vacuumShift", "[", "fun_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vac", ",", "fun2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vac", " ", "=", " ", 
      RowBox[{"Minimize", "[", 
       RowBox[{
        RowBox[{"fun", "[", "x", "]"}], ",", "x"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fun2", "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{"fun", "[", "x", "]"}], "-", 
       RowBox[{"vac", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "fun2", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.635265747003277*^9, 3.635265857663258*^9}, {
  3.635266045062655*^9, 3.635266070783608*^9}, {3.6352661083956547`*^9, 
  3.635266108571846*^9}, {3.635266306467614*^9, 3.635266342479596*^9}, {
  3.6352663887459497`*^9, 3.635266410356515*^9}, {3.6352664593339252`*^9, 
  3.6352664690928183`*^9}, {3.635266542411448*^9, 3.6352665891830997`*^9}, {
  3.635266675198574*^9, 3.635266675561842*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "4"}], "-", 
    RowBox[{"x", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   RowBox[{"vacuumShift", "[", "f", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"f2", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.635266004680923*^9, 3.635266013463393*^9}, {
  3.635266121755237*^9, 3.6352661272040567`*^9}, {3.635266242135271*^9, 
  3.635266272007259*^9}, {3.635266424118814*^9, 3.635266427158286*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ASJOFOQ=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
fP8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.24999999544833568`, 0.2499999763182368}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.635266017997617*^9, {3.635266052371736*^9, 3.6352661280387993`*^9}, {
   3.6352662293919563`*^9, 3.63526627276996*^9}, {3.635266333081808*^9, 
   3.635266345695426*^9}, {3.6352663928013144`*^9, 3.635266428064645*^9}, 
   3.635266594384892*^9, 3.635266678475877*^9, 3.636297043703465*^9, 
   3.636411883438613*^9, 3.636455498520178*^9, 3.636456470720065*^9, 
   3.6364659167502613`*^9, 3.636466192379567*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SolveVolterraEqn", "[", 
   RowBox[{"g_", ",", "x0_", ",", "y_", ",", "xmax_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "y1", ",", "nn"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Solve", " ", "y"}], " ", "=", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "x0", "x1"], 
       RowBox[{
        RowBox[{"g", "[", "x", "]"}], 
        RowBox[{"\[DifferentialD]", "x"}], " ", "for", " ", "x1", " ", "in", 
        " ", "the", " ", "range", " ", "x0", " ", "to", " ", "xmax"}]}]}], 
     " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Works", " ", "for", " ", "going", " ", "either", " ", "left", " ", "or",
       " ", "right", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"dending", " ", "on", " ", "if", " ", "x0"}], ">", "or", "<", 
        "xmax"}], " "}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nn", " ", "=", " ", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"x1", " ", "=", " ", 
      RowBox[{"x0", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"xmax", "-", "x0"}], ")"}], "/", 
        RowBox[{"2", "^", "nn"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"y1", " ", "=", " ", 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"g", "[", "x", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "x0", ",", "x1"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"y1", "-", "y"}], "]"}], "<", "eps"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"nn", " ", "=", " ", 
         RowBox[{"nn", "+", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"y1", ">", "y"}], ",", 
          RowBox[{
           RowBox[{"x1", " ", "=", " ", 
            RowBox[{"x1", " ", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xmax", "-", "x0"}], ")"}], "/", 
              RowBox[{"2", "^", "nn"}]}]}]}], ";"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"x1", " ", "=", " ", 
            RowBox[{"x1", " ", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xmax", "-", "x0"}], ")"}], "/", 
              RowBox[{"2", "^", "nn"}]}]}]}], ";"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "x1", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.636371657700077*^9, 3.636371658137822*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", "0.01", ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "-", 
        RowBox[{
         RowBox[{"(", "10", ")"}], "^", "2"}]}], ")"}], "^", "2"}], " ", 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], "=", 
   FractionBox[
    RowBox[{"v", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"v", "'"}], "[", "x", "]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SolveVolterraEqn", "[", 
  RowBox[{"g", ",", "8.6", ",", "80", ",", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.636371662232521*^9, 3.636371662849128*^9}}],

Cell[BoxData["0.24225986003875735`"], "Output",
 CellChangeTimes->{3.636371298070374*^9, 3.6363716700784903`*^9, 
  3.6364118835730333`*^9, 3.6364554986700163`*^9, 3.636456470881775*^9, 
  3.636465916891021*^9, 3.63646619253756*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"(", "0.1", ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Log", "[", "x", "]"}], "+", 
      RowBox[{"0.001", "*", 
       RowBox[{"x", "^", "4"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], "=", 
   FractionBox[
    RowBox[{"v", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"v", "'"}], "[", "x", "]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SolveVolterraEqn", "[", 
  RowBox[{"g", ",", "0.8", ",", "80", ",", "100"}], "]"}]}], "Input",
 CellChangeTimes->{{3.636371664922524*^9, 3.636371665520903*^9}}],

Cell[BoxData["20.94855099916458`"], "Output",
 CellChangeTimes->{3.6363712981868753`*^9, 3.6363716727418423`*^9, 
  3.6364118836900053`*^9, 3.636455498783896*^9, 3.636456470984881*^9, 
  3.636465917071665*^9, 3.636466192650354*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cosmology Calculation Modules", "Section",
 CellChangeTimes->{{3.632572700079308*^9, 3.6325727032701283`*^9}, {
  3.6325727523956223`*^9, 3.632572763217533*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findZ\[Epsilon]sr", "[", 
   RowBox[{
   "v_", ",", "vp_", ",", "\[Phi]sol_", ",", "nmin_", ",", "nmax_", ",", 
    "dn_", ",", "hardLim_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Epsilon]sr", ",", "f", ",", "z", ",", "num", ",", "ii", ",", "ztot"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Epsilon]sr", "[", "x_", "]"}], ":=", 
      RowBox[{
       FractionBox["1", "2"], "*", 
       RowBox[{
        RowBox[{"(", 
         FractionBox[
          RowBox[{"vp", "[", "x", "]"}], 
          RowBox[{"v", "[", "x", "]"}]], ")"}], "^", "2"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", "n_", "]"}], ":=", 
      RowBox[{
       RowBox[{"\[Epsilon]sr", "[", 
        RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], "/.", "\[Phi]sol"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"f", "[", "n", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "nmin", ",", "nmax"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"N", ",", "\"\<\[Epsilon]sr\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{"countZeros", "[", 
       RowBox[{"f", ",", "nmin", ",", "nmax", ",", "dn"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<number of zeros for \[Epsilon]sr is \>\"", ",", "z"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ztot", "=", "z"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", "\[Equal]", "0"}], ",", 
       RowBox[{"num", "=", "0"}], ",", 
       RowBox[{"num", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ii", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "n_", "]"}], "=", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Epsilon]sr", "[", 
             RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], "/.", "\[Phi]sol"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "ii"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"f", "[", "n", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "nmin", ",", "nmax"}], "}"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"N", ",", "ii"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", "n_", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"z", "=", 
         RowBox[{"countZeros", "[", 
          RowBox[{"f", ",", "nmin", ",", "nmax", ",", "dn"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<number of zeros for \>\"", ",", "ii", ",", 
          "\"\<th derivative of \[Epsilon] is \>\"", ",", "z"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ztot", "=", 
         RowBox[{"ztot", "+", "z"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"z", "\[Equal]", "0"}], ",", 
          RowBox[{"num", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"num", "\[GreaterEqual]", "2"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ii", "\[GreaterEqual]", "hardLim"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ii", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ztot", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069648686266*^9}, {
   3.6320698026344633`*^9, 3.632069803849359*^9}, {3.632069888652547*^9, 
   3.632069892034321*^9}, {3.632842665037709*^9, 3.632842689289703*^9}, 
   3.632843037229307*^9, {3.6328435138282146`*^9, 3.632843514513176*^9}, {
   3.632845041671144*^9, 3.632845061319417*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findZ\[Epsilon]", "[", 
   RowBox[{
   "v_", ",", "\[Phi]sol_", ",", "nmin_", ",", "nmax_", ",", "dn_", ",", 
    "hardLim_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "hsq", ",", "\[Epsilon]", ",", "f", ",", "z", ",", "num", ",", "ii", ",",
       "ztot"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"hsq", "[", "n_", "]"}], ":=", 
      FractionBox[
       RowBox[{"v", "[", 
        RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], 
       RowBox[{"3", "-", 
        RowBox[{
         FractionBox["1", "2"], "*", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "'"}], "[", "n", "]"}], "^", "2"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]", "[", "n_", "]"}], " ", "=", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"3", "*", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "'"}], "[", "n", "]"}], "^", "2"}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]", "'"}], "[", "n", "]"}], "^", "2"}], "+", 
          RowBox[{"2", "*", 
           FractionBox[
            RowBox[{"v", "[", 
             RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], 
            RowBox[{"hsq", "[", "n", "]"}]]}]}]]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", "n_", "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"\[Epsilon]", "[", "n", "]"}], "/.", "\[Phi]sol"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"f", "[", "n", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "nmin", ",", "nmax"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"N", ",", "\"\<\[Epsilon]\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{"countZeros", "[", 
       RowBox[{"f", ",", "nmin", ",", "nmax", ",", "dn"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<number of zeros for \[Epsilon] is \>\"", ",", "z"}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"ztot", "=", "z"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", "\[Equal]", "0"}], ",", 
       RowBox[{"num", "=", "0"}], ",", 
       RowBox[{"num", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ii", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "n_", "]"}], "=", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"\[Epsilon]", "[", 
             RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", "ii"}], "}"}]}], "]"}], "/.", "\[Phi]sol"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"f", "[", "n", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "nmin", ",", "nmax"}], "}"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"N", ",", "ii"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", "n_", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"z", "=", 
         RowBox[{"countZeros", "[", 
          RowBox[{"f", ",", "nmin", ",", "nmax", ",", "dn"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<number of zeros for \>\"", ",", "ii", ",", 
          "\"\<th derivative of \[Epsilon] is \>\"", ",", "z"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ztot", "=", 
         RowBox[{"ztot", "+", "z"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"z", "\[Equal]", "0"}], ",", 
          RowBox[{"num", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"num", "\[GreaterEqual]", "2"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ii", "\[GreaterEqual]", "hardLim"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ii", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ztot", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6328450740319777`*^9, 3.632845191517982*^9}, {
  3.6328471513014507`*^9, 3.632847243195019*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findZ\[Eta]", "[", 
   RowBox[{
   "v_", ",", "vpp_", ",", "\[Phi]sol_", ",", "nmin_", ",", "nmax_", ",", 
    "dn_", ",", "hardLim_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Eta]sr", ",", "f", ",", "z", ",", "num", ",", "ii", ",", "ztot"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Eta]sr", "[", "n_", "]"}], ":=", 
      FractionBox[
       RowBox[{"vpp", "[", 
        RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], 
       RowBox[{"v", "[", 
        RowBox[{"\[Phi]", "[", "n", "]"}], "]"}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", "n_", "]"}], ":=", 
      RowBox[{
       RowBox[{"\[Eta]sr", "[", 
        RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], "/.", "\[Phi]sol"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"f", "[", "n", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "nmin", ",", "nmax"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"N", ",", "\"\<\[Eta]sr\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{"countZeros", "[", 
       RowBox[{"f", ",", "nmin", ",", "nmax", ",", "dn"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<number of zeros for \[Eta]sr is \>\"", ",", "z"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"ztot", "=", "z"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"z", "\[Equal]", "0"}], ",", 
       RowBox[{"num", "=", "0"}], ",", 
       RowBox[{"num", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ii", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", "n_", "]"}], "=", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Eta]sr", "[", 
             RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], "/.", "\[Phi]sol"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "ii"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"f", "[", "n", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "nmin", ",", "nmax"}], "}"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"N", ",", "ii"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", "n_", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"z", "=", 
         RowBox[{"countZeros", "[", 
          RowBox[{"f", ",", "nmin", ",", "nmax", ",", "dn"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<number of zeros for \>\"", ",", "ii", ",", 
          "\"\<th derivative of \[Eta] is \>\"", ",", "z"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ztot", "=", 
         RowBox[{"ztot", "+", "z"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"z", "\[Equal]", "0"}], ",", 
          RowBox[{"num", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"num", "\[GreaterEqual]", "2"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ii", "\[GreaterEqual]", "hardLim"}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ii", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ztot", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
  3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
  3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
  3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
  3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
  3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
  3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
  3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
  3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
  3.63225245598943*^9, 3.632252456750738*^9}, {3.632842876588925*^9, 
  3.63284288225711*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findH", "[", "v_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", ",", "hsq"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"h", "[", "n_", "]"}], ":=", " ", 
      RowBox[{"Simplify", "[", 
       SqrtBox[
        FractionBox[
         RowBox[{"v", "[", 
          RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], 
         RowBox[{"3", "-", 
          RowBox[{
           FractionBox["1", "2"], "*", 
           RowBox[{
            RowBox[{
             RowBox[{"\[Phi]", "'"}], "[", "n", "]"}], "^", "2"}]}]}]]], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hsq", "[", "n_", "]"}], ":=", 
      FractionBox[
       RowBox[{"v", "[", 
        RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], 
       RowBox[{"3", "-", 
        RowBox[{
         FractionBox["1", "2"], "*", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "'"}], "[", "n", "]"}], "^", "2"}]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"h", ",", "hsq"}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
  3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
  3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
  3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
  3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
  3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
  3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
  3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
  3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
  3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
  3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
  3.632256684910276*^9, 3.6322566883638268`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Find Initial Conditions for 1st Integration", \
"Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.6325729436291227`*^9, 3.6325729638906307`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"choose\[Phi]0Manual", "[", "\[Phi]0list_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Phi]0index", ",", "\[Phi]0"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Phi]0index", " ", "=", " ", 
      RowBox[{
      "Input", "[", 
       "\"\<Enter the index for the \[Phi]0 you want to use: \\n(Counting \
starts at 1)\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Phi]0", " ", "=", " ", 
      RowBox[{"\[Phi]0list", "[", 
       RowBox[{"[", "\[Phi]0index", "]"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Phi]0", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
   3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
   3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
   3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
   3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
   3.632256684910276*^9, 3.6322567228667803`*^9}, {3.632256762975321*^9, 
   3.632256834136731*^9}, {3.632256873563801*^9, 3.6322568924777193`*^9}, {
   3.6322569683690643`*^9, 3.632256972554051*^9}, {3.6322570192626133`*^9, 
   3.6322570209734583`*^9}, {3.632327964947974*^9, 3.632327966731344*^9}, {
   3.632403162132741*^9, 3.632403195682312*^9}, {3.632403252477903*^9, 
   3.632403275415255*^9}, {3.632403309065662*^9, 3.6324034629825373`*^9}, {
   3.632403659207909*^9, 3.632403668695052*^9}, {3.632403877474052*^9, 
   3.6324038897757597`*^9}, {3.6324039739954557`*^9, 3.632403981223496*^9}, {
   3.632404036131015*^9, 3.632404056962983*^9}, {3.63240416019606*^9, 
   3.632404170817552*^9}, {3.63240461817124*^9, 3.632404690569952*^9}, {
   3.632414390296451*^9, 3.6324143939927397`*^9}, {3.632414451220035*^9, 
   3.6324145736538477`*^9}, {3.6324146125764017`*^9, 3.632414617486979*^9}, {
   3.632414748966365*^9, 3.632414799139472*^9}, {3.6324148997071743`*^9, 
   3.632414911625079*^9}, {3.632415945524592*^9, 3.6324159563734217`*^9}, {
   3.632416217633375*^9, 3.632416234671789*^9}, {3.632416281390789*^9, 
   3.6324163185605173`*^9}, {3.632416383101006*^9, 3.632416392435342*^9}, {
   3.632416454982794*^9, 3.632416462031869*^9}, {3.63241651932373*^9, 
   3.6324165197550573`*^9}, {3.632416621363352*^9, 3.6324166458561172`*^9}, {
   3.632416679503626*^9, 3.6324166861882887`*^9}, {3.632416801647546*^9, 
   3.632416809370686*^9}, {3.632417589332136*^9, 3.632417728264863*^9}, {
   3.632417758471261*^9, 3.632417758700963*^9}, {3.632417806275442*^9, 
   3.6324178092645817`*^9}, {3.632417867759531*^9, 3.632417892066928*^9}, {
   3.632418007083666*^9, 3.632418041192181*^9}, {3.632418223180643*^9, 
   3.632418232120276*^9}, {3.632418274152711*^9, 3.632418405236803*^9}, {
   3.632418608239208*^9, 3.63241861987739*^9}, {3.63241908949255*^9, 
   3.632419109464899*^9}, {3.632419194443057*^9, 3.6324192158563337`*^9}, {
   3.6324203720925493`*^9, 3.6324203795052347`*^9}, {3.632420412080882*^9, 
   3.63242047034764*^9}, {3.632420515037866*^9, 3.6324205276395063`*^9}, {
   3.632420596147456*^9, 3.632420598728861*^9}, 3.6324206357376957`*^9, {
   3.632420702259598*^9, 3.6324207513751793`*^9}, {3.632420819338311*^9, 
   3.632420866605492*^9}, {3.632501743660304*^9, 3.632501754425441*^9}, {
   3.6325018694905653`*^9, 3.632501869680622*^9}, {3.632570142628533*^9, 
   3.632570151136201*^9}, 3.632570493920218*^9, {3.632570525133362*^9, 
   3.632570583583644*^9}, {3.633362017479479*^9, 3.633362018853538*^9}, {
   3.6333622354198313`*^9, 3.633362238354541*^9}, {3.633374163830387*^9, 
   3.633374164035861*^9}, {3.633375441576952*^9, 3.633375455640027*^9}, {
   3.633434404945939*^9, 3.633434429336817*^9}, {3.633434459441268*^9, 
   3.6334344825522957`*^9}, {3.6334345639891376`*^9, 3.63343461465768*^9}, {
   3.633434664417079*^9, 3.633434766618836*^9}, {3.633434824025238*^9, 
   3.633434937457974*^9}, {3.6334359961998787`*^9, 3.633436018596888*^9}, {
   3.63343626753296*^9, 3.633436317593206*^9}, {3.633436688771687*^9, 
   3.633436747023789*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"choose\[Phi]0Left", "[", 
   RowBox[{"\[Phi]0list_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Phi]0listpos", ",", "\[Phi]0", ",", "vacuumArray"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Phi]0listpos", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"\[Phi]0list", ",", 
        RowBox[{
         RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"vacuum", " ", "=", " ", 
        RowBox[{"First", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"\[Phi]0listpos", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], "&"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Phi]0", " ", "=", " ", 
        RowBox[{"Max", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"\[Phi]0listpos", ",", 
           RowBox[{
            RowBox[{"#", "<", "vacuum"}], "&"}]}], "]"}], "]"}]}], ";"}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Phi]0listpos", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vacuumArray", " ", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"\[Phi]0list", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<vacuumArray = \>\"", ",", "vacuumArray"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vacuumArray", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"\[Phi]0", "=", 
           RowBox[{"Min", "[", "\[Phi]0list", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Phi]0", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"\[Phi]0list", ",", 
              RowBox[{
               RowBox[{"#", "<", 
                RowBox[{"First", "[", "vacuumArray", "]"}]}], "&"}]}], "]"}], 
            "]"}]}]}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vacuumArray", " ", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"\[Phi]0listpos", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<vacuumArray = \>\"", ",", "vacuumArray"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vacuumArray", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"\[Phi]0", "=", 
           RowBox[{"Min", "[", "\[Phi]0listpos", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Phi]0", " ", "=", " ", 
           RowBox[{"Max", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"\[Phi]0listpos", ",", 
              RowBox[{
               RowBox[{"#", "<", 
                RowBox[{"First", "[", "vacuumArray", "]"}]}], "&"}]}], "]"}], 
            "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Phi]0", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
   3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
   3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
   3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
   3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
   3.632256684910276*^9, 3.6322567228667803`*^9}, {3.632256762975321*^9, 
   3.632256834136731*^9}, {3.632256873563801*^9, 3.6322568924777193`*^9}, {
   3.6322569683690643`*^9, 3.632256972554051*^9}, {3.6322570192626133`*^9, 
   3.6322570209734583`*^9}, {3.632327964947974*^9, 3.632327966731344*^9}, {
   3.632403162132741*^9, 3.632403195682312*^9}, {3.632403252477903*^9, 
   3.632403275415255*^9}, {3.632403309065662*^9, 3.6324034629825373`*^9}, {
   3.632403659207909*^9, 3.632403668695052*^9}, {3.632403877474052*^9, 
   3.6324038897757597`*^9}, {3.6324039739954557`*^9, 3.632403981223496*^9}, {
   3.632404036131015*^9, 3.632404056962983*^9}, {3.63240416019606*^9, 
   3.632404170817552*^9}, {3.63240461817124*^9, 3.632404690569952*^9}, {
   3.632414390296451*^9, 3.6324143939927397`*^9}, {3.632414451220035*^9, 
   3.6324145736538477`*^9}, {3.6324146125764017`*^9, 3.632414617486979*^9}, {
   3.632414748966365*^9, 3.632414799139472*^9}, {3.6324148997071743`*^9, 
   3.632414911625079*^9}, {3.632415945524592*^9, 3.6324159563734217`*^9}, {
   3.632416217633375*^9, 3.632416234671789*^9}, {3.632416281390789*^9, 
   3.6324163185605173`*^9}, {3.632416383101006*^9, 3.632416392435342*^9}, {
   3.632416454982794*^9, 3.632416462031869*^9}, {3.63241651932373*^9, 
   3.6324165197550573`*^9}, {3.632416621363352*^9, 3.6324166458561172`*^9}, {
   3.632416679503626*^9, 3.6324166861882887`*^9}, {3.632416801647546*^9, 
   3.632416809370686*^9}, {3.632417589332136*^9, 3.632417728264863*^9}, {
   3.632417758471261*^9, 3.632417758700963*^9}, {3.632417806275442*^9, 
   3.6324178092645817`*^9}, {3.632417867759531*^9, 3.632417892066928*^9}, {
   3.632418007083666*^9, 3.632418041192181*^9}, {3.632418223180643*^9, 
   3.632418232120276*^9}, {3.632418274152711*^9, 3.632418405236803*^9}, {
   3.632418608239208*^9, 3.63241861987739*^9}, {3.63241908949255*^9, 
   3.632419109464899*^9}, {3.632419194443057*^9, 3.6324192158563337`*^9}, {
   3.6324203720925493`*^9, 3.6324203795052347`*^9}, {3.632420412080882*^9, 
   3.63242047034764*^9}, {3.632420515037866*^9, 3.6324205276395063`*^9}, {
   3.632420596147456*^9, 3.632420598728861*^9}, 3.6324206357376957`*^9, {
   3.632420702259598*^9, 3.6324207513751793`*^9}, {3.632420819338311*^9, 
   3.632420866605492*^9}, {3.632501743660304*^9, 3.632501754425441*^9}, {
   3.6325018694905653`*^9, 3.632501869680622*^9}, {3.632570142628533*^9, 
   3.632570151136201*^9}, 3.632570493920218*^9, {3.632570525133362*^9, 
   3.632570583583644*^9}, {3.633362017479479*^9, 3.633362018853538*^9}, {
   3.6333622354198313`*^9, 3.633362238354541*^9}, {3.633374163830387*^9, 
   3.633374164035861*^9}, {3.633375441576952*^9, 3.633375455640027*^9}, {
   3.633434404945939*^9, 3.633434429336817*^9}, {3.633434459441268*^9, 
   3.6334344825522957`*^9}, {3.6334345639891376`*^9, 3.63343461465768*^9}, {
   3.633434664417079*^9, 3.633434766618836*^9}, {3.633434824025238*^9, 
   3.633434937457974*^9}, {3.6334359961998787`*^9, 3.633436018596888*^9}, {
   3.63343626753296*^9, 3.633436317593206*^9}, {3.633436688771687*^9, 
   3.63343669028253*^9}, {3.6334386507404118`*^9, 3.633438652667325*^9}, {
   3.6339519376026077`*^9, 3.633951938761895*^9}, {3.633971187565578*^9, 
   3.633971197747664*^9}, {3.633973775190803*^9, 3.6339737960433073`*^9}, {
   3.633973828621296*^9, 3.633973927158669*^9}, {3.6339741158408623`*^9, 
   3.633974116659177*^9}, {3.6339744155645514`*^9, 3.633974416078197*^9}, {
   3.633974496128991*^9, 3.633974496626693*^9}, {3.6339746413072233`*^9, 
   3.63397464200589*^9}, {3.633974928487762*^9, 3.63397493353477*^9}, {
   3.6339751905813923`*^9, 3.633975207699377*^9}, 3.6339752527063026`*^9, 
   3.633975318505404*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"choose\[Phi]0Right", "[", 
   RowBox[{"\[Phi]0list_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Phi]0listpos", ",", "\[Phi]0", ",", "vacuumArray"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Phi]0listpos", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"\[Phi]0list", ",", 
        RowBox[{
         RowBox[{"#", "\[GreaterEqual]", "0"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Phi]0listpos", "\[Equal]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vacuumArray", " ", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"\[Phi]0list", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<vacuumArray = \>\"", ",", "vacuumArray"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vacuumArray", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"\[Phi]0", "=", 
           RowBox[{"Max", "[", "\[Phi]0list", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Phi]0", " ", "=", " ", 
           RowBox[{"Max", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"\[Phi]0list", ",", 
              RowBox[{
               RowBox[{"#", ">", 
                RowBox[{"First", "[", "vacuumArray", "]"}]}], "&"}]}], "]"}], 
            "]"}]}]}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vacuumArray", " ", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"\[Phi]0listpos", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"v", "[", "#", "]"}], "<", 
             RowBox[{"10", "^", 
              RowBox[{"-", "6"}]}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<vacuumArray = \>\"", ",", "vacuumArray"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vacuumArray", "\[Equal]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"\[Phi]0", "=", 
           RowBox[{"Max", "[", "\[Phi]0listpos", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Phi]0", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{"Select", "[", 
             RowBox[{"\[Phi]0listpos", ",", 
              RowBox[{
               RowBox[{"#", ">", 
                RowBox[{"First", "[", "vacuumArray", "]"}]}], "&"}]}], "]"}], 
            "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Phi]0", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
   3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
   3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
   3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
   3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
   3.632256684910276*^9, 3.6322567228667803`*^9}, {3.632256762975321*^9, 
   3.632256834136731*^9}, {3.632256873563801*^9, 3.6322568924777193`*^9}, {
   3.6322569683690643`*^9, 3.632256972554051*^9}, {3.6322570192626133`*^9, 
   3.6322570209734583`*^9}, {3.632327964947974*^9, 3.632327966731344*^9}, {
   3.632403162132741*^9, 3.632403195682312*^9}, {3.632403252477903*^9, 
   3.632403275415255*^9}, {3.632403309065662*^9, 3.6324034629825373`*^9}, {
   3.632403659207909*^9, 3.632403668695052*^9}, {3.632403877474052*^9, 
   3.6324038897757597`*^9}, {3.6324039739954557`*^9, 3.632403981223496*^9}, {
   3.632404036131015*^9, 3.632404056962983*^9}, {3.63240416019606*^9, 
   3.632404170817552*^9}, {3.63240461817124*^9, 3.632404690569952*^9}, {
   3.632414390296451*^9, 3.6324143939927397`*^9}, {3.632414451220035*^9, 
   3.6324145736538477`*^9}, {3.6324146125764017`*^9, 3.632414617486979*^9}, {
   3.632414748966365*^9, 3.632414799139472*^9}, {3.6324148997071743`*^9, 
   3.632414911625079*^9}, {3.632415945524592*^9, 3.6324159563734217`*^9}, {
   3.632416217633375*^9, 3.632416234671789*^9}, {3.632416281390789*^9, 
   3.6324163185605173`*^9}, {3.632416383101006*^9, 3.632416392435342*^9}, {
   3.632416454982794*^9, 3.632416462031869*^9}, {3.63241651932373*^9, 
   3.6324165197550573`*^9}, {3.632416621363352*^9, 3.6324166458561172`*^9}, {
   3.632416679503626*^9, 3.6324166861882887`*^9}, {3.632416801647546*^9, 
   3.632416809370686*^9}, {3.632417589332136*^9, 3.632417728264863*^9}, {
   3.632417758471261*^9, 3.632417758700963*^9}, {3.632417806275442*^9, 
   3.6324178092645817`*^9}, {3.632417867759531*^9, 3.632417892066928*^9}, {
   3.632418007083666*^9, 3.632418041192181*^9}, {3.632418223180643*^9, 
   3.632418232120276*^9}, {3.632418274152711*^9, 3.632418405236803*^9}, {
   3.632418608239208*^9, 3.63241861987739*^9}, {3.63241908949255*^9, 
   3.632419109464899*^9}, {3.632419194443057*^9, 3.6324192158563337`*^9}, {
   3.6324203720925493`*^9, 3.6324203795052347`*^9}, {3.632420412080882*^9, 
   3.63242047034764*^9}, {3.632420515037866*^9, 3.6324205276395063`*^9}, {
   3.632420596147456*^9, 3.632420598728861*^9}, 3.6324206357376957`*^9, {
   3.632420702259598*^9, 3.6324207513751793`*^9}, {3.632420819338311*^9, 
   3.632420866605492*^9}, {3.632501743660304*^9, 3.632501754425441*^9}, {
   3.6325018694905653`*^9, 3.632501869680622*^9}, {3.632570142628533*^9, 
   3.632570151136201*^9}, 3.632570493920218*^9, {3.632570525133362*^9, 
   3.632570583583644*^9}, {3.633362017479479*^9, 3.633362018853538*^9}, {
   3.6333622354198313`*^9, 3.633362238354541*^9}, {3.633374163830387*^9, 
   3.633374164035861*^9}, {3.633375441576952*^9, 3.633375455640027*^9}, {
   3.633434404945939*^9, 3.633434429336817*^9}, {3.633434459441268*^9, 
   3.6334344825522957`*^9}, {3.6334345639891376`*^9, 3.63343461465768*^9}, {
   3.633434664417079*^9, 3.633434766618836*^9}, {3.633434824025238*^9, 
   3.633434937457974*^9}, {3.6334359961998787`*^9, 3.633436018596888*^9}, {
   3.63343626753296*^9, 3.633436317593206*^9}, {3.633436688771687*^9, 
   3.63343669028253*^9}, {3.6334386507404118`*^9, 3.633438652667325*^9}, {
   3.6339519376026077`*^9, 3.633951974399733*^9}, {3.633952868773436*^9, 
   3.6339528691269083`*^9}, {3.633952939387291*^9, 3.6339529414802227`*^9}, {
   3.633953936170027*^9, 3.633953949832945*^9}, {3.633954062564322*^9, 
   3.633954073459138*^9}, {3.633954403271386*^9, 3.633954439974901*^9}, {
   3.6339550731287737`*^9, 3.6339550871675034`*^9}, {3.633955175085805*^9, 
   3.6339551797341623`*^9}, {3.633974002883629*^9, 3.633974068560916*^9}, {
   3.633974445227236*^9, 3.6339744659557943`*^9}, {3.633974564407115*^9, 
   3.633974584064693*^9}, {3.633974620675538*^9, 3.6339746340753603`*^9}, {
   3.633974936661893*^9, 3.633974965140229*^9}, {3.633975275187007*^9, 
   3.633975320941678*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"guess\[Phi]iLeft", "[", 
   RowBox[{"v_", ",", "vpp_", ",", "ni_", ",", "\[Phi]0_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"guesses", ",", "\[Phi]iguess"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"guesses", " ", "=", " ", 
      RowBox[{"t", "/.", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{"ni", "\[Equal]", 
          FractionBox[
           RowBox[{"v", "[", "t", "]"}], 
           RowBox[{"vpp", "[", "t", "]"}]]}], ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<guesses = \>\"", ",", "guesses"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]iguess", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"guesses", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", ">", "0"}], "&&", 
           RowBox[{"#", "<", "\[Phi]0"}]}], "&"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Phi]iguess", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
   3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
   3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
   3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
   3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
   3.632256684910276*^9, 3.6322567228667803`*^9}, {3.632256762975321*^9, 
   3.632256834136731*^9}, {3.632256873563801*^9, 3.6322568924777193`*^9}, {
   3.6322569683690643`*^9, 3.632256972554051*^9}, {3.6322570192626133`*^9, 
   3.6322570209734583`*^9}, {3.632327964947974*^9, 3.632327966731344*^9}, {
   3.632403162132741*^9, 3.632403195682312*^9}, {3.632403252477903*^9, 
   3.632403275415255*^9}, {3.632403309065662*^9, 3.6324034629825373`*^9}, {
   3.632403659207909*^9, 3.632403668695052*^9}, {3.632403877474052*^9, 
   3.6324038897757597`*^9}, {3.6324039739954557`*^9, 3.632403981223496*^9}, {
   3.632404036131015*^9, 3.632404056962983*^9}, {3.63240416019606*^9, 
   3.632404170817552*^9}, {3.63240461817124*^9, 3.632404690569952*^9}, {
   3.632414390296451*^9, 3.6324143939927397`*^9}, {3.632414451220035*^9, 
   3.6324145736538477`*^9}, {3.6324146125764017`*^9, 3.632414617486979*^9}, {
   3.632414748966365*^9, 3.632414799139472*^9}, {3.6324148997071743`*^9, 
   3.632414911625079*^9}, {3.632415945524592*^9, 3.6324159563734217`*^9}, {
   3.632416217633375*^9, 3.632416234671789*^9}, {3.632416281390789*^9, 
   3.6324163185605173`*^9}, {3.632416383101006*^9, 3.632416392435342*^9}, {
   3.632416454982794*^9, 3.632416462031869*^9}, {3.63241651932373*^9, 
   3.6324165197550573`*^9}, {3.632416621363352*^9, 3.6324166458561172`*^9}, {
   3.632416679503626*^9, 3.6324166861882887`*^9}, {3.632416801647546*^9, 
   3.632416809370686*^9}, {3.632417589332136*^9, 3.632417728264863*^9}, {
   3.632417758471261*^9, 3.632417758700963*^9}, {3.632417806275442*^9, 
   3.6324178092645817`*^9}, {3.632417867759531*^9, 3.632417892066928*^9}, {
   3.632418007083666*^9, 3.632418041192181*^9}, {3.632418223180643*^9, 
   3.632418232120276*^9}, {3.632418274152711*^9, 3.632418405236803*^9}, {
   3.632418608239208*^9, 3.63241861987739*^9}, {3.63241908949255*^9, 
   3.632419109464899*^9}, {3.632419194443057*^9, 3.6324192158563337`*^9}, {
   3.6324203720925493`*^9, 3.6324203795052347`*^9}, {3.632420412080882*^9, 
   3.63242047034764*^9}, {3.632420515037866*^9, 3.6324205276395063`*^9}, {
   3.632420596147456*^9, 3.632420598728861*^9}, 3.6324206357376957`*^9, {
   3.632420702259598*^9, 3.6324207513751793`*^9}, {3.632420819338311*^9, 
   3.632420866605492*^9}, {3.632501743660304*^9, 3.632501754425441*^9}, {
   3.6325018694905653`*^9, 3.632501869680622*^9}, {3.632570142628533*^9, 
   3.632570151136201*^9}, 3.632570493920218*^9, {3.632570525133362*^9, 
   3.632570583583644*^9}, {3.633362017479479*^9, 3.633362018853538*^9}, {
   3.6333622354198313`*^9, 3.633362238354541*^9}, {3.633374163830387*^9, 
   3.633374164035861*^9}, {3.633375441576952*^9, 3.633375455640027*^9}, {
   3.633434404945939*^9, 3.633434429336817*^9}, {3.633434459441268*^9, 
   3.6334344825522957`*^9}, {3.6334345639891376`*^9, 3.63343461465768*^9}, {
   3.633434664417079*^9, 3.633434766618836*^9}, {3.633434824025238*^9, 
   3.633434937457974*^9}, {3.6334359961998787`*^9, 3.633436018596888*^9}, {
   3.63343626753296*^9, 3.633436317593206*^9}, {3.633436688771687*^9, 
   3.63343669028253*^9}, {3.6334386507404118`*^9, 3.6334387103539886`*^9}, {
   3.633438848334144*^9, 3.6334389267610598`*^9}, {3.633438960048828*^9, 
   3.633439060710534*^9}, 3.6335460798035097`*^9, {3.6335462046605167`*^9, 
   3.633546208677415*^9}, {3.633546279546142*^9, 3.63354628209096*^9}, {
   3.633951991385803*^9, 3.6339519924457483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"guess\[Phi]iRight", "[", 
   RowBox[{"v_", ",", "vpp_", ",", "ni_", ",", "\[Phi]0_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"guesses", ",", "\[Phi]iguess"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"guesses", " ", "=", " ", 
      RowBox[{"t", "/.", 
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{"ni", "\[Equal]", 
          FractionBox[
           RowBox[{"v", "[", "t", "]"}], 
           RowBox[{"vpp", "[", "t", "]"}]]}], ",", "t"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<guesses = \>\"", ",", "guesses"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]iguess", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"Select", "[", 
        RowBox[{"guesses", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", ">", "0"}], "&&", 
           RowBox[{"#", ">", "\[Phi]0"}]}], "&"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Phi]iguess", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
   3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
   3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
   3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
   3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
   3.632256684910276*^9, 3.6322567228667803`*^9}, {3.632256762975321*^9, 
   3.632256834136731*^9}, {3.632256873563801*^9, 3.6322568924777193`*^9}, {
   3.6322569683690643`*^9, 3.632256972554051*^9}, {3.6322570192626133`*^9, 
   3.6322570209734583`*^9}, {3.632327964947974*^9, 3.632327966731344*^9}, {
   3.632403162132741*^9, 3.632403195682312*^9}, {3.632403252477903*^9, 
   3.632403275415255*^9}, {3.632403309065662*^9, 3.6324034629825373`*^9}, {
   3.632403659207909*^9, 3.632403668695052*^9}, {3.632403877474052*^9, 
   3.6324038897757597`*^9}, {3.6324039739954557`*^9, 3.632403981223496*^9}, {
   3.632404036131015*^9, 3.632404056962983*^9}, {3.63240416019606*^9, 
   3.632404170817552*^9}, {3.63240461817124*^9, 3.632404690569952*^9}, {
   3.632414390296451*^9, 3.6324143939927397`*^9}, {3.632414451220035*^9, 
   3.6324145736538477`*^9}, {3.6324146125764017`*^9, 3.632414617486979*^9}, {
   3.632414748966365*^9, 3.632414799139472*^9}, {3.6324148997071743`*^9, 
   3.632414911625079*^9}, {3.632415945524592*^9, 3.6324159563734217`*^9}, {
   3.632416217633375*^9, 3.632416234671789*^9}, {3.632416281390789*^9, 
   3.6324163185605173`*^9}, {3.632416383101006*^9, 3.632416392435342*^9}, {
   3.632416454982794*^9, 3.632416462031869*^9}, {3.63241651932373*^9, 
   3.6324165197550573`*^9}, {3.632416621363352*^9, 3.6324166458561172`*^9}, {
   3.632416679503626*^9, 3.6324166861882887`*^9}, {3.632416801647546*^9, 
   3.632416809370686*^9}, {3.632417589332136*^9, 3.632417728264863*^9}, {
   3.632417758471261*^9, 3.632417758700963*^9}, {3.632417806275442*^9, 
   3.6324178092645817`*^9}, {3.632417867759531*^9, 3.632417892066928*^9}, {
   3.632418007083666*^9, 3.632418041192181*^9}, {3.632418223180643*^9, 
   3.632418232120276*^9}, {3.632418274152711*^9, 3.632418405236803*^9}, {
   3.632418608239208*^9, 3.63241861987739*^9}, {3.63241908949255*^9, 
   3.632419109464899*^9}, {3.632419194443057*^9, 3.6324192158563337`*^9}, {
   3.6324203720925493`*^9, 3.6324203795052347`*^9}, {3.632420412080882*^9, 
   3.63242047034764*^9}, {3.632420515037866*^9, 3.6324205276395063`*^9}, {
   3.632420596147456*^9, 3.632420598728861*^9}, 3.6324206357376957`*^9, {
   3.632420702259598*^9, 3.6324207513751793`*^9}, {3.632420819338311*^9, 
   3.632420866605492*^9}, {3.632501743660304*^9, 3.632501754425441*^9}, {
   3.6325018694905653`*^9, 3.632501869680622*^9}, {3.632570142628533*^9, 
   3.632570151136201*^9}, 3.632570493920218*^9, {3.632570525133362*^9, 
   3.632570583583644*^9}, {3.633362017479479*^9, 3.633362018853538*^9}, {
   3.6333622354198313`*^9, 3.633362238354541*^9}, {3.633374163830387*^9, 
   3.633374164035861*^9}, {3.633375441576952*^9, 3.633375455640027*^9}, {
   3.633434404945939*^9, 3.633434429336817*^9}, {3.633434459441268*^9, 
   3.6334344825522957`*^9}, {3.6334345639891376`*^9, 3.63343461465768*^9}, {
   3.633434664417079*^9, 3.633434766618836*^9}, {3.633434824025238*^9, 
   3.633434937457974*^9}, {3.6334359961998787`*^9, 3.633436018596888*^9}, {
   3.63343626753296*^9, 3.633436317593206*^9}, {3.633436688771687*^9, 
   3.63343669028253*^9}, {3.6334386507404118`*^9, 3.6334387103539886`*^9}, {
   3.633438848334144*^9, 3.6334389267610598`*^9}, {3.633438960048828*^9, 
   3.633439060710534*^9}, 3.6335460798035097`*^9, {3.6335462046605167`*^9, 
   3.633546208677415*^9}, {3.633546279546142*^9, 3.63354628209096*^9}, {
   3.633951991385803*^9, 3.633952006366664*^9}, {3.6339521033624773`*^9, 
   3.633952104114151*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findICsr", "[", 
   RowBox[{
   "v_", ",", "vp_", ",", "vpp_", ",", "ni_", ",", "plots_", ",", "prints_", 
    ",", "left_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Phi]0list", ",", "\[Phi]0index", ",", "\[Phi]0", ",", "f", ",", 
      "\[Phi]iguess", ",", "\[Phi]i1s", ",", "\[Phi]i1", ",", "\[Phi]pi1", 
      ",", "vplt", ",", "\[Phi]0plt", ",", "\[Phi]iplt", ",", "\[Phi]i1sol", 
      ",", "\[Phi]max"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vplt", " ", "=", " ", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"v", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", "12"}], "}"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<V\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Solve", " ", "for", " ", "where", " ", "\[Epsilon]"}], "=", 
       RowBox[{
        RowBox[{"1", " ", "and", " ", "hence", " ", "N"}], "=", "0"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Phi]0list", " ", "=", " ", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"vp", "[", "x", "]"}], "\[Equal]", 
           RowBox[{
            SqrtBox["2"], "*", 
            RowBox[{"v", "[", "x", "]"}]}]}], ",", "x", ",", "Reals"}], "]"}],
         "]"}], "/.", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]0list", " ", "=", " ", 
      RowBox[{"Values", "[", 
       RowBox[{"stripList", "[", 
        RowBox[{"Union", "[", 
         RowBox[{"\[Phi]0list", ",", 
          RowBox[{
           RowBox[{"Normal", "[", 
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"vp", "[", "x", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{"-", 
                 SqrtBox["2"]}], "*", 
                RowBox[{"v", "[", "x", "]"}]}]}], ",", "x", ",", "Reals"}], 
             "]"}], "]"}], "/.", 
           RowBox[{
            RowBox[{"C", "[", "1", "]"}], "\[Rule]", "0"}]}]}], "]"}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<\[Phi]0list = \>\"", ",", "\[Phi]0list"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"plots", ",", 
       RowBox[{
        RowBox[{"\[Phi]0plt", " ", "=", " ", 
         RowBox[{"ListPlot", "[", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"\[Phi]0list", ",", 
             RowBox[{"v", "[", "\[Phi]0list", "]"}]}], "}"}], "]"}], "]"}]}], 
        ";", " ", 
        RowBox[{"(*", " ", 
         RowBox[{"Transpose", " ", "is", " ", 
          RowBox[{"Zip", "!!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Show", "[", 
          RowBox[{"vplt", ",", "\[Phi]0plt"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"left", ",", 
       RowBox[{"\[Phi]0", " ", "=", " ", 
        RowBox[{"choose\[Phi]0Left", "[", 
         RowBox[{"\[Phi]0list", ",", "v"}], "]"}]}], ",", 
       RowBox[{"\[Phi]0", " ", "=", " ", 
        RowBox[{"choose\[Phi]0Right", "[", 
         RowBox[{"\[Phi]0list", ",", "v"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Phi]0 = \>\"", ",", "\[Phi]0"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Phi]0", "\[Equal]", "\[Infinity]"}], ",", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<\[Phi]0=\[Infinity]\>\"", "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Phi]0", "\[Equal]", 
        RowBox[{"-", "\[Infinity]"}]}], ",", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<\[Phi]0=-\[Infinity]\>\"", "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Integrate", " ", "up", " ", "the", " ", "hill", " ", "to", " ", "find",
        " ", "the", " ", "value", " ", "of", " ", "\[Phi]", " ", "at", " ", 
       "ni"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"x", ",", "t"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"v", "[", "x", "]"}], 
           RowBox[{"vp", "[", "x", "]"}]], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "\[Phi]0", ",", "t"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"prints", ",", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<f[t] = \>\"", ",", 
           RowBox[{"f", "[", "t", "]"}]}], "]"}]}], "]"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"left", ",", 
         RowBox[{
          RowBox[{"\[Phi]i1s", " ", "=", " ", 
           RowBox[{"t", "/.", 
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ni", "==", 
                RowBox[{"f", "[", "t", "]"}]}], "&&", 
               RowBox[{"t", "\[GreaterEqual]", "0"}], " ", "&&", " ", 
               RowBox[{"t", "\[LessEqual]", "\[Phi]0"}]}], ",", "t"}], 
             "]"}]}]}], ";"}], ",", "\[IndentingNewLine]", 
         RowBox[{"\[Phi]i1s", " ", "=", " ", 
          RowBox[{"t", "/.", 
           RowBox[{"NSolve", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ni", "==", 
               RowBox[{"f", "[", "t", "]"}]}], "&&", 
              RowBox[{"t", "\[GreaterEqual]", "0"}], " ", "&&", " ", 
              RowBox[{"t", "\[GreaterEqual]", "\[Phi]0"}]}], ",", "t"}], 
            "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"prints", ",", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<\[Phi]i1s = NSolve[ni==f[t]] = \>\"", ",", "\[Phi]i1s"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"\[Phi]i1s", "\[Equal]", "t"}], ",", 
         RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Phi]i1", " ", "=", " ", 
        RowBox[{"Last", "[", "\[Phi]i1s", "]"}]}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", "x_", "]"}], "=", 
      FractionBox[
       RowBox[{"v", "[", "x", "]"}], 
       RowBox[{"vp", "[", "x", "]"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"left", ",", 
       RowBox[{"\[Phi]max", "=", "0"}], ",", 
       RowBox[{"\[Phi]max", "=", "50"}]}], "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"\[Phi]i1", " ", "=", " ", 
      RowBox[{"SolveVolterraEqn", "[", 
       RowBox[{"g", ",", "\[Phi]0", ",", "ni", ",", "\[Phi]max"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Phi]pi1", " ", "=", " ", 
      FractionBox[
       RowBox[{"vp", "[", "\[Phi]i1", "]"}], 
       RowBox[{"v", "[", "\[Phi]i1", "]"}]]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"True", ",", 
       RowBox[{
        RowBox[{"\[Phi]iplt", " ", "=", " ", 
         RowBox[{"ListPlot", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Phi]i1", ",", 
              RowBox[{"v", "[", "\[Phi]i1", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Phi]0", ",", 
              RowBox[{"v", "[", "\[Phi]0", "]"}]}], "}"}]}], "}"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Show", "[", 
          RowBox[{"vplt", ",", "\[Phi]iplt"}], "]"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"\[Phi]i1", ",", "\[Phi]pi1"}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
   3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
   3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
   3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
   3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
   3.632256684910276*^9, 3.6322567228667803`*^9}, {3.632256762975321*^9, 
   3.632256834136731*^9}, {3.632256873563801*^9, 3.6322568924777193`*^9}, {
   3.6322569683690643`*^9, 3.632256972554051*^9}, {3.6322570192626133`*^9, 
   3.6322570209734583`*^9}, {3.632327964947974*^9, 3.632327966731344*^9}, {
   3.632403162132741*^9, 3.632403195682312*^9}, {3.632403252477903*^9, 
   3.632403275415255*^9}, {3.632403309065662*^9, 3.6324034629825373`*^9}, {
   3.632403659207909*^9, 3.632403668695052*^9}, {3.632403877474052*^9, 
   3.6324038897757597`*^9}, {3.6324039739954557`*^9, 3.632403981223496*^9}, {
   3.632404036131015*^9, 3.632404056962983*^9}, {3.63240416019606*^9, 
   3.632404170817552*^9}, {3.63240461817124*^9, 3.632404690569952*^9}, {
   3.632414390296451*^9, 3.6324143939927397`*^9}, {3.632414451220035*^9, 
   3.6324145736538477`*^9}, {3.6324146125764017`*^9, 3.632414617486979*^9}, {
   3.632414748966365*^9, 3.632414799139472*^9}, {3.6324148997071743`*^9, 
   3.632414911625079*^9}, {3.632415945524592*^9, 3.6324159563734217`*^9}, {
   3.632416217633375*^9, 3.632416234671789*^9}, {3.632416281390789*^9, 
   3.6324163185605173`*^9}, {3.632416383101006*^9, 3.632416392435342*^9}, {
   3.632416454982794*^9, 3.632416462031869*^9}, {3.63241651932373*^9, 
   3.6324165197550573`*^9}, {3.632416621363352*^9, 3.6324166458561172`*^9}, {
   3.632416679503626*^9, 3.6324166861882887`*^9}, {3.632416801647546*^9, 
   3.632416809370686*^9}, {3.632417589332136*^9, 3.632417728264863*^9}, {
   3.632417758471261*^9, 3.632417758700963*^9}, {3.632417806275442*^9, 
   3.6324178092645817`*^9}, {3.632417867759531*^9, 3.632417892066928*^9}, {
   3.632418007083666*^9, 3.632418041192181*^9}, {3.632418223180643*^9, 
   3.632418232120276*^9}, {3.632418274152711*^9, 3.632418405236803*^9}, {
   3.632418608239208*^9, 3.63241861987739*^9}, {3.63241908949255*^9, 
   3.632419109464899*^9}, {3.632419194443057*^9, 3.6324192158563337`*^9}, {
   3.6324203720925493`*^9, 3.6324203795052347`*^9}, {3.632420412080882*^9, 
   3.63242047034764*^9}, {3.632420515037866*^9, 3.6324205276395063`*^9}, {
   3.632420596147456*^9, 3.632420598728861*^9}, 3.6324206357376957`*^9, {
   3.632420702259598*^9, 3.6324207513751793`*^9}, {3.632420819338311*^9, 
   3.632420866605492*^9}, {3.632501743660304*^9, 3.632501754425441*^9}, {
   3.6325018694905653`*^9, 3.632501869680622*^9}, {3.632570142628533*^9, 
   3.632570151136201*^9}, 3.632570493920218*^9, {3.632570525133362*^9, 
   3.632570583583644*^9}, {3.633362017479479*^9, 3.633362018853538*^9}, {
   3.6333622354198313`*^9, 3.633362238354541*^9}, {3.633374163830387*^9, 
   3.633374164035861*^9}, {3.633375441576952*^9, 3.633375455640027*^9}, {
   3.633434404945939*^9, 3.633434407615782*^9}, {3.63343583672756*^9, 
   3.633435869677394*^9}, {3.633436733479249*^9, 3.633436754939547*^9}, {
   3.633437865159005*^9, 3.63343804025385*^9}, {3.633438105220854*^9, 
   3.633438105924226*^9}, {3.6334387199693413`*^9, 3.633438736515292*^9}, {
   3.633439069807171*^9, 3.633439077138912*^9}, {3.633439349058196*^9, 
   3.63343941979709*^9}, {3.633444169523172*^9, 3.633444194023662*^9}, {
   3.633444393055928*^9, 3.633444397183732*^9}, {3.633546108844471*^9, 
   3.633546112851088*^9}, {3.6335461876508093`*^9, 3.6335461946721077`*^9}, {
   3.633546270236858*^9, 3.633546273558792*^9}, {3.633548213070331*^9, 
   3.633548307065653*^9}, {3.633548342456448*^9, 3.633548405550482*^9}, {
   3.633610922862822*^9, 3.633611000179401*^9}, {3.633611036173695*^9, 
   3.6336110388255053`*^9}, {3.633611117864517*^9, 3.6336111203408012`*^9}, {
   3.6337784584885387`*^9, 3.633778464550355*^9}, {3.633782015016644*^9, 
   3.633782016215434*^9}, {3.63389204937446*^9, 3.6338920524842*^9}, {
   3.633892104215932*^9, 3.633892112543063*^9}, {3.633892227193659*^9, 
   3.633892232252726*^9}, {3.633952239914934*^9, 3.6339523401004066`*^9}, {
   3.633969828135408*^9, 3.633969830670258*^9}, {3.6339699392190123`*^9, 
   3.633969947167963*^9}, {3.6339699945205793`*^9, 3.633970005208157*^9}, {
   3.6344896151341667`*^9, 3.6344896686672697`*^9}, {3.634489780841312*^9, 
   3.634489784776257*^9}, {3.634489897237049*^9, 3.63448992422565*^9}, {
   3.63449000960995*^9, 3.634490056638297*^9}, {3.634490417854534*^9, 
   3.6344904425484877`*^9}, {3.634491513602635*^9, 3.6344915396884193`*^9}, {
   3.634492410785473*^9, 3.634492484484827*^9}, {3.634492585304051*^9, 
   3.634492586902534*^9}, {3.6344926496137257`*^9, 3.6344926533695602`*^9}, {
   3.634572123207439*^9, 3.634572125486163*^9}, {3.634572349000126*^9, 
   3.6345723570774593`*^9}, {3.634572672440786*^9, 3.634572685560317*^9}, {
   3.63464971946926*^9, 3.6346497258118677`*^9}, {3.634815140669984*^9, 
   3.634815142293741*^9}, {3.634815999928389*^9, 3.634816002919348*^9}, {
   3.635090486184668*^9, 3.635090522373169*^9}, {3.635090662391521*^9, 
   3.635090664397629*^9}, {3.6351589570307913`*^9, 3.635158975314126*^9}, {
   3.635159036370248*^9, 3.6351590374890423`*^9}, {3.635264648810144*^9, 
   3.6352646515216703`*^9}, {3.635264917011779*^9, 3.635264951880896*^9}, {
   3.6362989046658077`*^9, 3.63629890615996*^9}, {3.636365334026793*^9, 
   3.636365471485098*^9}, 3.6363659098356543`*^9, {3.636371586157186*^9, 
   3.63637165209006*^9}, {3.6363717305601*^9, 3.6363718550947723`*^9}, {
   3.636456768632512*^9, 3.636456795981757*^9}, {3.636474675026132*^9, 
   3.636474719445014*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Find Initial Conditions for 2nd Integration", \
"Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.632572971355283*^9, 3.6325729814170628`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findICshifted", "[", 
   RowBox[{
   "v_", ",", "\[Phi]sol1_", ",", "ni_", ",", "nf_", ",", "ni2_", ",", 
    "n1guess_", ",", "prints_", ",", "plots_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Epsilon]1", ",", "n1", ",", "\[Phi]i2", ",", "\[Phi]pi2", ",", 
      "roots"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Find", " ", "\[Epsilon]1"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Epsilon]1", "=", 
      RowBox[{"find\[Epsilon]", "[", 
       RowBox[{"v", ",", "\[Phi]sol1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<At n = 0\>\"", ",", "\"\<, \[Epsilon]1 = \>\"", ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"\[Epsilon]1", "[", "n", "]"}], "/.", 
           RowBox[{"n", "\[Rule]", "0"}]}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"plots", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{"\[Epsilon]1", "[", "n", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "nf", ",", "ni"}], "}"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"N", ",", "\"\<\[Epsilon]1\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"nf", ",", 
               RowBox[{"-", "nf"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1.2"}]}], "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}]}]}], "]"}], "]"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Solve", " ", "for", " ", "where", " ", 
        RowBox[{"\[Epsilon]1", "[", "n", "]"}]}], "\[Equal]", "1"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"roots", " ", "=", " ", 
      RowBox[{"Check", "[", 
       RowBox[{
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Epsilon]1", "[", "n", "]"}], "-", "1"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "n1guess"}], "}"}]}], "]"}], ",", 
        "\"\<1/0 Error\>\"", ",", 
        StyleBox[
         RowBox[{"Power", "::", "infy"}], "MessageName"]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<roots = \>\"", ",", "roots"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"roots", "\[Equal]", "\"\<1/0 Error\>\""}], ",", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<THROW!\>\"", "]"}], ";", 
        RowBox[{"Throw", "[", "\"\<n1 = 1/0\>\"", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n1", " ", "=", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"n", "/.", 
        RowBox[{"First", "[", "roots", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<At n1 = \>\"", ",", "n1", ",", "\"\<, \[Epsilon]1 = \>\"", ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{"\[Epsilon]1", "[", "n", "]"}], "/.", 
           RowBox[{"n", "\[Rule]", "n1"}]}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n1", "\[Equal]", "n1guess"}], ",", " ", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Find", " ", "the", " ", "new", " ", "initial", " ", "conditions"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Phi]i2", " ", "=", " ", 
      RowBox[{"Re", "[", 
       RowBox[{
        RowBox[{"\[Phi]", "[", 
         RowBox[{"ni2", "+", "n1"}], "]"}], "/.", "\[Phi]sol1"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Phi]i2 = \>\"", ",", "\[Phi]i2"}], "]"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"\[Phi]pi2", " ", "=", " ", 
      RowBox[{"Re", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"\[Phi]", "[", "n", "]"}], ",", "n"}], "]"}], "/.", 
         "\[Phi]sol1"}], "/.", 
        RowBox[{"n", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"ni2", "+", "n1"}], ")"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Phi]pi2 = \>\"", ",", "\[Phi]pi2"}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"\[Phi]i2", ",", "\[Phi]pi2"}], "}"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
   3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
   3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
   3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
   3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
   3.632256684910276*^9, 3.6322567228667803`*^9}, {3.632256762975321*^9, 
   3.632256834136731*^9}, {3.632256873563801*^9, 3.6322568924777193`*^9}, {
   3.6322569683690643`*^9, 3.632256972554051*^9}, {3.6322570192626133`*^9, 
   3.6322570209734583`*^9}, {3.632327964947974*^9, 3.6323279759849033`*^9}, {
   3.632328030766469*^9, 3.632328043972164*^9}, {3.632328107256157*^9, 
   3.632328189715714*^9}, {3.63257145839135*^9, 3.632571459253324*^9}, {
   3.632571533930187*^9, 3.632571535071752*^9}, {3.634657506432263*^9, 
   3.634657558732606*^9}, {3.636466129280222*^9, 3.6364661622323103`*^9}, {
   3.636814198967198*^9, 3.636814331621833*^9}, {3.636814679814933*^9, 
   3.6368146891860847`*^9}, 3.636814758389037*^9, {3.636814789344446*^9, 
   3.63681479018926*^9}, {3.6368171790227823`*^9, 3.6368172036518993`*^9}, {
   3.636817268405279*^9, 3.636817293323344*^9}, {3.636817333937517*^9, 
   3.636817395953671*^9}, {3.636818476910131*^9, 3.63681847744449*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveKG", "[", 
   RowBox[{
   "hsq_", ",", "vp_", ",", "ni_", ",", "nf_", ",", "\[Phi]i1_", ",", 
    "\[Phi]pi1_", ",", "plots_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[Phi]sol1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Phi]sol1", " ", "=", " ", 
      RowBox[{"Last", "@", 
       RowBox[{"Last", "@", 
        RowBox[{"NDSolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{"hsq", "[", "n", "]"}], "*", 
               RowBox[{
                RowBox[{"\[Phi]", "''"}], "[", "n", "]"}]}], "+", 
              RowBox[{
               RowBox[{"hsq", "[", "n", "]"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Phi]", "'"}], "[", "n", "]"}], ")"}], "^", 
                "3"}]}], "-", 
              RowBox[{"6", "*", 
               RowBox[{"hsq", "[", "n", "]"}], "*", 
               RowBox[{
                RowBox[{"\[Phi]", "'"}], "[", "n", "]"}]}], "+", 
              RowBox[{"2", "*", 
               RowBox[{"vp", "[", 
                RowBox[{"\[Phi]", "[", "n", "]"}], "]"}]}]}], "\[Equal]", 
             "0"}], ",", 
            RowBox[{
             RowBox[{"\[Phi]", "[", "ni", "]"}], "==", "\[Phi]i1"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Phi]", "'"}], "[", "ni", "]"}], "==", 
             "\[Phi]pi1"}]}], "}"}], ",", "\[Phi]", ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "ni", ",", "nf"}], "}"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "All"}]}], "]"}]}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"plots", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Phi]", "[", "n", "]"}], "/.", "\[Phi]sol1"}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "nf", ",", "ni"}], "}"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"N", ",", "\"\<\[Phi]sol\>\""}], "}"}]}], ",", 
          RowBox[{"GridLines", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1.2"}]}], "}"}], ",", 
             RowBox[{"{", "1", "}"}]}], "}"}]}]}], "]"}], "]"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Phi]sol1", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
   3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
   3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
   3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
   3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
   3.632256684910276*^9, 3.6322567228667803`*^9}, {3.632256762975321*^9, 
   3.632256834136731*^9}, {3.632256873563801*^9, 3.6322568924777193`*^9}, {
   3.6322569683690643`*^9, 3.632256972554051*^9}, {3.6322570192626133`*^9, 
   3.6322570209734583`*^9}, {3.632261463697686*^9, 3.632261526882407*^9}, {
   3.632261573575016*^9, 3.632261574254897*^9}, {3.63226162777391*^9, 
   3.632261628539176*^9}, {3.63226166131641*^9, 3.632261727069186*^9}, {
   3.632262690911195*^9, 3.632262692844343*^9}, {3.632324617744712*^9, 
   3.6323246217660303`*^9}, 3.6326782140952597`*^9, {3.632678250614541*^9, 
   3.63267825885187*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Find Epsilon", "Subsubsection"]], "Subsection",
 CellChangeTimes->{{3.632573016423563*^9, 3.632573019693983*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"find\[Epsilon]", "[", 
   RowBox[{"v_", ",", "\[Phi]sol_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Phi]p", ",", "hsq", ",", "\[Epsilon]", ",", "\[Eta]"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]p", "[", "n_", "]"}], " ", "=", " ", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "n", "]"}], ",", "n"}], "]"}], "/.", 
       "\[Phi]sol"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"hsq", "[", "n_", "]"}], ":=", 
      RowBox[{
       FractionBox[
        RowBox[{"v", "[", 
         RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], 
        RowBox[{"3", "-", 
         RowBox[{
          FractionBox["1", "2"], "*", 
          RowBox[{
           RowBox[{"\[Phi]p", "[", "n", "]"}], "^", "2"}]}]}]], "/.", 
       "\[Phi]sol"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]", "[", "n_", "]"}], " ", "=", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"3", "*", 
         FractionBox[
          RowBox[{
           RowBox[{"\[Phi]p", "[", "n", "]"}], "^", "2"}], 
          RowBox[{
           RowBox[{
            RowBox[{"\[Phi]p", "[", "n", "]"}], "^", "2"}], "+", 
           RowBox[{"2", "*", 
            FractionBox[
             RowBox[{"v", "[", 
              RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], 
             RowBox[{"hsq", "[", "n", "]"}]]}]}]]}], "/.", "\[Phi]sol"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"above", " ", "took", " ", "out", " ", "a", " ", 
       RowBox[{"Re", "[", "]"}], " ", "just", " ", "inside", " ", "the", " ", 
       
       RowBox[{"Evaluate", "[", "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Eta]", "[", "n_", "]"}], " ", "=", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"\[Epsilon]", "[", "n", "]"}], ",", "n"}], "]"}]}], ";"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Epsilon]", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzmkog3EAx/FZrkY5MiGtZwpr5FhIrM1MSZJr7hwpRim5SrxQbklrCmVY
RM5GEiVJGZEXJLdlhSJrjhy5HvP8/i++fd5++cWVaSVsFotFMUGhf6xq2Mkk
Oxhs1cCX2TIt7B2z0sH1V+EezE/WGKHYbuIGutb43sGNpDYzZFPFb9D7hf6E
Iir+C+oXzm1GGFsa6zjwIaSAD52lJ8R5rk0MjF3nE/tPz5q0jJIBbju8kvR1
w8MhZQ/kzIcMwACfFKIuKGMEzqXWamH5tEX/yeho67EFFRyR7pvRwp1cgoql
0VUYOt6lhz/U8DGcWcu7gEfhhUboVRR3D6c4IjNsSFA9waJ9hy+4u6omKpRl
FtjrpyVWp38IaXyJDSLYWboYCXmCHaJxs14KH2PURHtqRg63I64TYbMgXw8N
1hqikqaD/xh/s9+joPk1WgoN8VVxMLKPDuQ5m2QVHfIwKChYyYGu98/E5STv
U66LSXabxbuEmWlsN09GOSvXHf4DI1X71Q==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"find\[Phi]sol", "[", 
   RowBox[{
   "v_", ",", "vp_", ",", "vpp_", ",", "ni_", ",", "nf_", ",", "ni2_", ",", 
    "nf2_", ",", "n1guess_", ",", "plots_", ",", "prints_", ",", "left_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "h", ",", "hsq", ",", "\[Phi]i1", ",", "\[Phi]pi1", ",", "\[Phi]sol1", 
      ",", "\[Phi]i2", ",", "\[Phi]pi2", ",", "\[Phi]sol2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Define", " ", "the", " ", "hubble", " ", "parameter"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"h", ",", "hsq"}], "}"}], "=", 
      RowBox[{"findH", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Find", " ", "the", " ", "slow", " ", "roll", " ", "initial", " ", 
       "conditions"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Phi]i1", ",", "\[Phi]pi1"}], "}"}], "=", 
      RowBox[{"findICsr", "[", 
       RowBox[{
       "v", ",", "vp", ",", "vpp", ",", "ni", ",", "plots", ",", "prints", 
        ",", "left"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Solve", " ", "the", " ", "Klein"}], "-", 
       RowBox[{"Gordon", " ", "equation", " ", "for", " ", 
        RowBox[{"\[Phi]1", "[", "n", "]"}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]sol1", " ", "=", " ", 
      RowBox[{"solveKG", "[", 
       RowBox[{
       "hsq", ",", "vp", ",", "ni", ",", "nf", ",", "\[Phi]i1", ",", 
        "\[Phi]pi1", ",", "plots"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Find", " ", "the", " ", "new", " ", "initial", " ", "conditions", " ",
         "and", " ", "re"}], "-", 
       RowBox[{"solve", " ", "the", " ", "KG", " ", "equation"}]}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Phi]i2", ",", "\[Phi]pi2"}], "}"}], "=", 
      RowBox[{"findICshifted", "[", 
       RowBox[{
       "v", ",", "\[Phi]sol1", ",", "ni", ",", "nf", ",", "ni2", ",", 
        "n1guess", ",", "prints", ",", "plots"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Phi]sol2", " ", "=", " ", 
      RowBox[{"solveKG", "[", 
       RowBox[{
       "hsq", ",", "vp", ",", "ni2", ",", "nf2", ",", "\[Phi]i2", ",", 
        "\[Phi]pi2", ",", "plots"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Note", ":", " ", 
       RowBox[{
       "before", " ", "I", " ", "had", " ", "it", " ", "integrating", " ", 
        "from", " ", "nf2", " ", "to", " ", "ni2"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Phi]sol2[60] = \>\"", ",", 
         RowBox[{
          RowBox[{"\[Phi]", "[", "60", "]"}], "/.", "\[Phi]sol2"}]}], "]"}]}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Phi]sol2", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0ltIk2EAxvE1nOkSWspEJGQTnGtm6dChNdw+FUREKl2QhWsKuYmCaBPE
QCHPinkgEzZ1GJl5aAsTDAkJWqF0oUTmgelELxQ/ZgwPTOtzvc978fC7fS7+
0uKKvCd8Ho8XSwYVseldg5dZZsnSaIXeCZMN9r6+YIdzh4ofsPCO1Q3VF0d2
YOjTmF34JbfJA/mS4iN41cv5oFKSdQqdH9YEQ8SGZ9VCuJ+gl0KR5jfVIRZo
YfqclPpqZbXeRkzrFzfDzbS+DvhzwNgJhY6EfhgXfZdqv3F/CE7eM9tg6Zjf
6SOGBEZ8gzqh0n5G9ItHp6FuengWJr5pc8K/ksFlOP750Tr8lfzYDSMNmXvw
nVDpgbXZXX+gYfHSKVyY7aHqjCY/7JXZqFX5JwoOv9QuJWwtmUqBUfJ5qvtr
jQYeaHuoQZLxDPhdtZ0Dn8sLndAVYKUaOe7mOfHfg+Nb0HN4WwNdWZWZMKWP
ux4lYpnylowkKNfPFMBWn/khDDeO6WFRe10RvFJ/Xgndm44qqBpY7oB15m4L
rDYtjECvWfUWvhRcE6hDWcYkKgiEsmBW2k1c23gRDYPiyxZVYSyTNzO/BGuC
m7T8CNLL1igDP6UyH+3E9fcG6n/OZy4D
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"find\[Phi]solnfLoop", "[", 
   RowBox[{
   "v_", ",", "vp_", ",", "vpp_", ",", "ni_", ",", "nf_", ",", "ni2_", ",", 
    "nf2_", ",", "n1guess_", ",", "plots_", ",", "prints_", ",", "left_", ",",
     "nfStep_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "nff", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nff", "=", "nf"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"nff", "<", 
        RowBox[{"-", "eps"}]}], ",", "\n", 
       RowBox[{
        RowBox[{"\[Phi]sol2", "=", 
         RowBox[{"Block", "[", 
          RowBox[{
           RowBox[{"{", "Print", "}"}], ",", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Catch", "[", 
             RowBox[{"find\[Phi]sol", "[", 
              RowBox[{
              "v", ",", "vp", ",", "vpp", ",", "ni", ",", "nff", ",", "ni2", 
               ",", "nf2", ",", "n1guess", ",", "False", ",", "False", ",", 
               "left"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[Phi]sol2", "===", "\"\<n1 = 1/0\>\""}], ",", 
          RowBox[{"nff", "=", 
           RowBox[{"nff", "+", "nfStep"}]}], ",", 
          RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<nff = \>\"", ",", "nff"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"plots", "||", "prints"}], ",", 
       RowBox[{"\[Phi]sol2", "=", 
        RowBox[{"Catch", "[", 
         RowBox[{"find\[Phi]sol", "[", 
          RowBox[{
          "v", ",", "vp", ",", "vpp", ",", "ni", ",", "nff", ",", "ni2", ",", 
           "nf2", ",", "n1guess", ",", "plots", ",", "prints", ",", "left"}], 
          "]"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[Phi]sol2", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632065658067281*^9, 3.632065756143898*^9}, {
   3.632065787270989*^9, 3.632065904051095*^9}, {3.6320661373422537`*^9, 
   3.632066300853438*^9}, {3.632066333157133*^9, 3.6320663611702967`*^9}, {
   3.632066412165741*^9, 3.632066467066407*^9}, {3.6320665039356823`*^9, 
   3.63206650622268*^9}, {3.632066606802828*^9, 3.632066643671327*^9}, {
   3.632066826943471*^9, 3.632066830695198*^9}, {3.632067072158897*^9, 
   3.632067073054475*^9}, {3.6320696307763166`*^9, 3.632069680674712*^9}, {
   3.632069724663924*^9, 3.632069739237893*^9}, {3.632069817521367*^9, 
   3.632069818504171*^9}, {3.632069874661948*^9, 3.6320698836349697`*^9}, {
   3.63225245598943*^9, 3.632252456750738*^9}, {3.6322563695637608`*^9, 
   3.632256421221435*^9}, {3.6322564690532627`*^9, 3.632256548301293*^9}, {
   3.632256684910276*^9, 3.6322567228667803`*^9}, {3.632256762975321*^9, 
   3.632256834136731*^9}, {3.632256873563801*^9, 3.6322568924777193`*^9}, {
   3.6322569683690643`*^9, 3.632256972554051*^9}, {3.6322570192626133`*^9, 
   3.6322570209734583`*^9}, {3.632261463697686*^9, 3.632261526882407*^9}, {
   3.632261573575016*^9, 3.632261574254897*^9}, {3.63226162777391*^9, 
   3.632261628539176*^9}, {3.63226166131641*^9, 3.632261727069186*^9}, {
   3.632262690911195*^9, 3.632262692844343*^9}, {3.632263551937183*^9, 
   3.6322636396671124`*^9}, {3.632263673873526*^9, 3.632263715540022*^9}, {
   3.632329063924465*^9, 3.632329122110281*^9}, {3.6323294217302437`*^9, 
   3.6323294276553383`*^9}, {3.6323294612938337`*^9, 3.632329483954392*^9}, {
   3.632329615953011*^9, 3.632329621495956*^9}, {3.6323298226753187`*^9, 
   3.63232994051422*^9}, {3.632330030294001*^9, 3.632330033701775*^9}, {
   3.633438761281931*^9, 3.6334387707832527`*^9}, {3.6336110233448668`*^9, 
   3.633611028464581*^9}, {3.633952379349247*^9, 3.633952390272378*^9}, {
   3.636466180157406*^9, 3.636466189246138*^9}, {3.6368193540382957`*^9, 
   3.636819501425692*^9}, {3.636819577019903*^9, 3.636819603409683*^9}, {
   3.63681964310415*^9, 3.636819683536178*^9}, 3.636819753917719*^9, {
   3.636819795128558*^9, 3.636819797703815*^9}, {3.6368199842834873`*^9, 
   3.6368200675428658`*^9}, {3.636820128153483*^9, 3.636820182030118*^9}, {
   3.6368202420321617`*^9, 3.636820256548716*^9}, {3.636820296303154*^9, 
   3.6368203498519297`*^9}, {3.636820505469842*^9, 3.63682051711587*^9}, {
   3.636820547615448*^9, 3.6368205654824*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"findNsR", "[", 
    RowBox[{
    "v_", ",", "vp_", ",", "\[Phi]sol2_", ",", "ni2_", ",", "nf2_", ",", 
     "plots_", ",", "prints_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Phi]2p", ",", "h2sq", ",", "\[Epsilon]2", ",", "ns", ",", "r", ",", 
       "\[Epsilon]sr", ",", "\[Epsilon]srL", ",", "\[Eta]sr", ",", 
       "\[Eta]srL", ",", "Z\[Epsilon]", ",", "Z\[Eta]"}], " ", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Find", " ", "\[Epsilon]2"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]2", " ", "=", " ", 
       RowBox[{"find\[Epsilon]", "[", 
        RowBox[{"v", ",", "\[Phi]sol2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"prints", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<At n = 0\>\"", ",", "\"\<, \[Epsilon]1 = \>\"", ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"\[Epsilon]2", "[", "n", "]"}], "/.", 
            RowBox[{"n", "\[Rule]", "0"}]}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"plots", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"\[Epsilon]2", "[", "n", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "nf2", ",", "ni2"}], "}"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"N", ",", "\"\<\[Epsilon]2\>\""}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"nf2", ",", "ni2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Find", " ", "the", " ", "spectral", " ", 
        RowBox[{"tilt", ":", " ", 
         RowBox[{"ns", "[", "n", "]"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ns", "[", "n_", "]"}], " ", ":=", " ", 
       RowBox[{"1", "-", 
        RowBox[{"2", "*", 
         RowBox[{"\[Epsilon]2", "[", "n", "]"}]}], "+", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"\[Epsilon]2", "[", "n", "]"}], "]"}], ",", "n"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"prints", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<ns[60] = \>\"", ",", 
          RowBox[{
           RowBox[{"ns", "[", "n", "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{"n", "\[Rule]", "60"}], "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "[", "n_", "]"}], " ", ":=", " ", 
       RowBox[{"16", "*", 
        RowBox[{"\[Epsilon]2", "[", "n", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"prints", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<r[60] = \>\"", ",", 
          RowBox[{
           RowBox[{"r", "[", "n", "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{"n", "\[Rule]", "60"}], "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"plots", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"ns", "[", "n", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "nf2", ",", "ni2"}], "}"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"N", ",", "\"\<ns\>\""}], "}"}]}]}], "]"}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ns", "[", "n", "]"}], ",", 
         RowBox[{"r", "[", "n", "]"}], ",", "\[Epsilon]2"}], "}"}], "]"}]}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6301007913444843`*^9, {3.630100848386307*^9, 3.6301008889363422`*^9}, {
   3.6301010585364017`*^9, 3.630101163612708*^9}, {3.63010132715949*^9, 
   3.630101350628871*^9}, {3.630101434153866*^9, 3.630101705589897*^9}, {
   3.630101750524371*^9, 3.6301017981900587`*^9}, {3.6301018580554533`*^9, 
   3.630101871252617*^9}, {3.6301019569643*^9, 3.6301019865043716`*^9}, {
   3.6301020394493933`*^9, 3.63010204651302*^9}, {3.630102076588862*^9, 
   3.630102086292461*^9}, {3.6301021616415052`*^9, 3.630102170105464*^9}, {
   3.630102214489914*^9, 3.6301022356372223`*^9}, {3.6301024048609457`*^9, 
   3.630102406853269*^9}, {3.630102444300276*^9, 3.63010244444254*^9}, {
   3.6301026165609007`*^9, 3.630102632497952*^9}, {3.630103335799355*^9, 
   3.6301033858609457`*^9}, 3.631203255751425*^9, {3.631204487745455*^9, 
   3.631204541126915*^9}, {3.631204578781621*^9, 3.631204618514708*^9}, {
   3.631204798123405*^9, 3.631204804473257*^9}, {3.631206750098632*^9, 
   3.6312067905601397`*^9}, {3.631207548170205*^9, 3.631207571639567*^9}, {
   3.631300040558062*^9, 3.6313000944583607`*^9}, {3.631300261986643*^9, 
   3.631300264851232*^9}, 3.631370430850511*^9, {3.631376844040513*^9, 
   3.6313769208989553`*^9}, {3.631377033134266*^9, 3.631377037285449*^9}, {
   3.631377083155622*^9, 3.631377178734151*^9}, {3.6313772525322533`*^9, 
   3.631377257210475*^9}, 3.631377470375277*^9, {3.631377582147644*^9, 
   3.631377645190914*^9}, {3.631377694039156*^9, 3.631377715172462*^9}, {
   3.631377747860551*^9, 3.631377799320774*^9}, {3.6313778828074837`*^9, 
   3.631377885268388*^9}, {3.6313779762981787`*^9, 3.631377993897191*^9}, {
   3.631378842240246*^9, 3.631378893411298*^9}, {3.6313789333832684`*^9, 
   3.6313789365854797`*^9}, {3.6313789703201227`*^9, 3.631378996862191*^9}, {
   3.6313790374137983`*^9, 3.631379038676128*^9}, {3.631379327041008*^9, 
   3.631379336637561*^9}, {3.631379479887459*^9, 3.631379515596889*^9}, {
   3.631379567797516*^9, 3.631379585929515*^9}, 3.631379656422068*^9, {
   3.6313798024776897`*^9, 3.6313798178944273`*^9}, {3.631379972217153*^9, 
   3.631379976333065*^9}, {3.631448530314064*^9, 3.631448661381894*^9}, {
   3.6314487499277573`*^9, 3.63144882459037*^9}, {3.631448927088253*^9, 
   3.631448936788054*^9}, {3.6314638466466618`*^9, 3.631463857791938*^9}, {
   3.631463896670168*^9, 3.631463902371943*^9}, 3.631463948970786*^9, {
   3.631463979425815*^9, 3.631463995736273*^9}, {3.6314640336494827`*^9, 
   3.6314641200991488`*^9}, {3.6314642208727217`*^9, 3.6314642450517178`*^9}, 
   3.631469799644857*^9, {3.631469984802446*^9, 3.631470061045828*^9}, {
   3.631472250653201*^9, 3.631472261769651*^9}, {3.631472634666017*^9, 
   3.63147273336357*^9}, {3.6314727667214403`*^9, 3.631472812710689*^9}, {
   3.6314728437764063`*^9, 3.631472853325428*^9}, {3.631472888678329*^9, 
   3.6314729110931797`*^9}, {3.6314731499154*^9, 3.631473151944347*^9}, {
   3.631536858118425*^9, 3.631536974245165*^9}, 3.631537009629674*^9, {
   3.6315370476706133`*^9, 3.6315370740800056`*^9}, {3.631537104266694*^9, 
   3.631537108565847*^9}, {3.6315375586275167`*^9, 3.6315375667133627`*^9}, {
   3.631537612466167*^9, 3.631537613081254*^9}, {3.6316346184136868`*^9, 
   3.63163465380927*^9}, {3.6316347032080183`*^9, 3.6316348094328547`*^9}, 
   3.6316348487122803`*^9, {3.631634890446269*^9, 3.631634893814334*^9}, {
   3.631635332650824*^9, 3.631635373607038*^9}, {3.631635750341152*^9, 
   3.631635762860239*^9}, {3.6316361118841953`*^9, 3.631636207285839*^9}, {
   3.631637465529758*^9, 3.631637468373621*^9}, {3.631720398899125*^9, 
   3.631720405743457*^9}, {3.631720561265856*^9, 3.631720577648378*^9}, {
   3.63172066242188*^9, 3.631720666043708*^9}, {3.631720824956338*^9, 
   3.63172083890864*^9}, {3.631720878212511*^9, 3.631720880664631*^9}, {
   3.631720985902676*^9, 3.631720989266903*^9}, {3.631722751133938*^9, 
   3.631722797237199*^9}, {3.631722949679195*^9, 3.631722949964785*^9}, {
   3.63172303465598*^9, 3.631723039601185*^9}, {3.6317230839292192`*^9, 
   3.631723110158289*^9}, {3.631723142366*^9, 3.631723145653104*^9}, {
   3.631723176824144*^9, 3.631723233402643*^9}, {3.631723374122257*^9, 
   3.631723378758871*^9}, {3.631724792736157*^9, 3.63172479354144*^9}, {
   3.631724899626877*^9, 3.631724914833673*^9}, 3.631724973437446*^9, {
   3.631803364855302*^9, 3.631803367932201*^9}, {3.631806751414978*^9, 
   3.63180675677949*^9}, {3.631806831637743*^9, 3.631806833804934*^9}, {
   3.631806886091838*^9, 3.6318068888354397`*^9}, {3.631807044494051*^9, 
   3.631807047303863*^9}, {3.6318072356614733`*^9, 3.631807241240456*^9}, {
   3.631876580691614*^9, 3.631876598594902*^9}, {3.6318772150721817`*^9, 
   3.631877218475401*^9}, {3.631962262519423*^9, 3.631962298243692*^9}, {
   3.632046866530555*^9, 3.632046871568482*^9}, {3.632047365263524*^9, 
   3.632047423281815*^9}, {3.632066661798792*^9, 3.6320666718486347`*^9}, {
   3.632066764829298*^9, 3.6320667665863028`*^9}, {3.632066852492674*^9, 
   3.63206687100261*^9}, 3.632256466814683*^9, {3.632256556477208*^9, 
   3.6322565710658216`*^9}, {3.632256871531988*^9, 3.632256926259632*^9}, {
   3.632256976025621*^9, 3.632256978374608*^9}, {3.6322617140905447`*^9, 
   3.6322617615059643`*^9}, {3.6322628276661463`*^9, 
   3.6322628816392384`*^9}, {3.6322629352348547`*^9, 3.632263027420044*^9}, {
   3.632263637980938*^9, 3.632263670980774*^9}, {3.632263805116811*^9, 
   3.63226381553738*^9}, {3.632263943122085*^9, 3.632263963825371*^9}, {
   3.6322640124312887`*^9, 3.63226401290987*^9}, {3.6322640445175533`*^9, 
   3.632264044971552*^9}, {3.632324782628819*^9, 3.632324785031179*^9}, {
   3.632327693806326*^9, 3.632327727742708*^9}, 3.6323279287669897`*^9, {
   3.632328061506269*^9, 3.632328063849663*^9}, 3.632328100955537*^9, {
   3.63232820160305*^9, 3.632328237739354*^9}, {3.6323283500046587`*^9, 
   3.632328384371174*^9}, {3.63232898769409*^9, 3.632329001971725*^9}, {
   3.6323291445807467`*^9, 3.632329144938376*^9}, {3.632329230374905*^9, 
   3.632329232683902*^9}, {3.6323292747050037`*^9, 3.6323292834312677`*^9}, {
   3.632329920957432*^9, 3.6323300001557817`*^9}, {3.632331197988386*^9, 
   3.632331237856093*^9}, {3.63233126921327*^9, 3.6323313539807663`*^9}, 
   3.63233142542161*^9, {3.632331702988064*^9, 3.632331704850066*^9}, {
   3.635156595072998*^9, 3.63515659544258*^9}, {3.63515742028585*^9, 
   3.63515742069392*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findSRparams", "[", 
   RowBox[{
   "v_", ",", "vp_", ",", "vpp_", ",", "\[Phi]sol2_", ",", "ni2_", ",", 
    "nf2_", ",", "prints_", ",", "plots_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[Epsilon]sr", ",", "\[Epsilon]srL", ",", "\[Eta]sr", ",", 
      "\[Eta]srL"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Find", " ", "slow", " ", "roll", " ", "params", " ", "\[Epsilon]sr", 
      " ", "and", " ", "\[Eta]sr"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Epsilon]sr", "[", "n_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "*", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"vp", "[", 
            RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], 
           RowBox[{"v", "[", 
            RowBox[{"\[Phi]", "[", "n", "]"}], "]"}]], ")"}], "^", "2"}]}], "/.",
        "\[Phi]sol2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Epsilon]srL", "[", "n_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "*", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"v", "[", 
            RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], "]"}], ",", "n"}], 
         "]"}]}], "/.", "\[Phi]sol2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Epsilon]sr[0] = \>\"", ",", 
         RowBox[{
          RowBox[{"\[Epsilon]sr", "[", "n", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"n", "\[Rule]", "0"}], "}"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Epsilon]sr[60] = \>\"", ",", 
         RowBox[{
          RowBox[{"\[Epsilon]sr", "[", "n", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"n", "\[Rule]", "60"}], "}"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Epsilon]srL[0] = \>\"", ",", 
         RowBox[{
          RowBox[{"\[Epsilon]srL", "[", "n", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"n", "\[Rule]", "0"}], "}"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Epsilon]srL[60] = \>\"", ",", 
         RowBox[{
          RowBox[{"\[Epsilon]srL", "[", "n", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"n", "\[Rule]", "60"}], "}"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"plots", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            FractionBox["1", "2"], "*", 
            RowBox[{
             RowBox[{"(", 
              FractionBox[
               RowBox[{"vp", "[", "x", "]"}], 
               RowBox[{"v", "[", "x", "]"}]], ")"}], "^", "2"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "30"}], "}"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<\[Epsilon][\[Phi]]\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"plots", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"\[Epsilon]sr", "[", "n", "]"}], "]"}], ",", 
              "\"\<\[Epsilon]sr\>\""}], "]"}], ",", 
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{"\[Epsilon]2", "[", "n", "]"}], ",", 
              "\"\<\[Epsilon]2\>\""}], "]"}], ",", 
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"\[Epsilon]srL", "[", "n", "]"}], "]"}], ",", 
              "\"\<\[Epsilon]srL\>\""}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "nf2", ",", "ni2"}], "}"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"N", ",", "\"\<\[Epsilon]sr\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"nf2", ",", "ni2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "]"}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Eta]sr", "[", "n_", "]"}], ":=", 
      RowBox[{
       FractionBox[
        RowBox[{"vpp", "[", 
         RowBox[{"\[Phi]", "[", "n", "]"}], "]"}], 
        RowBox[{"v", "[", 
         RowBox[{"\[Phi]", "[", "n", "]"}], "]"}]], "/.", "\[Phi]sol2"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Eta]srL", "[", "n_", "]"}], ":=", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "*", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"vp", "[", 
            RowBox[{
             RowBox[{"\[Phi]", "[", "n", "]"}], "^", "2"}], "]"}], "]"}], ",",
           "n"}], "]"}]}], "/.", "\[Phi]sol2"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Eta]sr[0] = \>\"", ",", 
         RowBox[{
          RowBox[{"\[Eta]sr", "[", "n", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"n", "\[Rule]", "0"}], "}"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"prints", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Eta]sr[60] = \>\"", ",", 
         RowBox[{
          RowBox[{"\[Eta]sr", "[", "n", "]"}], "/.", 
          RowBox[{"{", 
           RowBox[{"n", "\[Rule]", "60"}], "}"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"plots", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           FractionBox[
            RowBox[{"vpp", "[", "x", "]"}], 
            RowBox[{"v", "[", "x", "]"}]], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "30"}], "}"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[Phi]\>\"", ",", "\"\<\[Eta][\[Phi]]\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "10"}], "}"}]}]}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"plots", ",", 
       RowBox[{"Print", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"\[Eta]sr", "[", "n", "]"}], "]"}], ",", 
              "\"\<\[Eta]sr\>\""}], "]"}], ",", 
            RowBox[{"Legended", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"\[Eta]srL", "[", "n", "]"}], "]"}], ",", 
              "\"\<\[Eta]srL\>\""}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "nf2", ",", "ni2"}], "}"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"N", ",", "\"\<\[Eta]sr\>\""}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"nf2", ",", "ni2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "3"}], "}"}]}], "}"}]}]}], "]"}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]sr", ",", "\[Eta]sr", ",", "\[Eta]srL"}], "}"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6301007913444843`*^9, {3.630100848386307*^9, 3.6301008889363422`*^9}, {
   3.6301010585364017`*^9, 3.630101163612708*^9}, {3.63010132715949*^9, 
   3.630101350628871*^9}, {3.630101434153866*^9, 3.630101705589897*^9}, {
   3.630101750524371*^9, 3.6301017981900587`*^9}, {3.6301018580554533`*^9, 
   3.630101871252617*^9}, {3.6301019569643*^9, 3.6301019865043716`*^9}, {
   3.6301020394493933`*^9, 3.63010204651302*^9}, {3.630102076588862*^9, 
   3.630102086292461*^9}, {3.6301021616415052`*^9, 3.630102170105464*^9}, {
   3.630102214489914*^9, 3.6301022356372223`*^9}, {3.6301024048609457`*^9, 
   3.630102406853269*^9}, {3.630102444300276*^9, 3.63010244444254*^9}, {
   3.6301026165609007`*^9, 3.630102632497952*^9}, {3.630103335799355*^9, 
   3.6301033858609457`*^9}, 3.631203255751425*^9, {3.631204487745455*^9, 
   3.631204541126915*^9}, {3.631204578781621*^9, 3.631204618514708*^9}, {
   3.631204798123405*^9, 3.631204804473257*^9}, {3.631206750098632*^9, 
   3.6312067905601397`*^9}, {3.631207548170205*^9, 3.631207571639567*^9}, {
   3.631300040558062*^9, 3.6313000944583607`*^9}, {3.631300261986643*^9, 
   3.631300264851232*^9}, 3.631370430850511*^9, {3.631376844040513*^9, 
   3.6313769208989553`*^9}, {3.631377033134266*^9, 3.631377037285449*^9}, {
   3.631377083155622*^9, 3.631377178734151*^9}, {3.6313772525322533`*^9, 
   3.631377257210475*^9}, 3.631377470375277*^9, {3.631377582147644*^9, 
   3.631377645190914*^9}, {3.631377694039156*^9, 3.631377715172462*^9}, {
   3.631377747860551*^9, 3.631377799320774*^9}, {3.6313778828074837`*^9, 
   3.631377885268388*^9}, {3.6313779762981787`*^9, 3.631377993897191*^9}, {
   3.631378842240246*^9, 3.631378893411298*^9}, {3.6313789333832684`*^9, 
   3.6313789365854797`*^9}, {3.6313789703201227`*^9, 3.631378996862191*^9}, {
   3.6313790374137983`*^9, 3.631379038676128*^9}, {3.631379327041008*^9, 
   3.631379336637561*^9}, {3.631379479887459*^9, 3.631379515596889*^9}, {
   3.631379567797516*^9, 3.631379585929515*^9}, 3.631379656422068*^9, {
   3.6313798024776897`*^9, 3.6313798178944273`*^9}, {3.631379972217153*^9, 
   3.631379976333065*^9}, {3.631448530314064*^9, 3.631448661381894*^9}, {
   3.6314487499277573`*^9, 3.63144882459037*^9}, {3.631448927088253*^9, 
   3.631448936788054*^9}, {3.6314638466466618`*^9, 3.631463857791938*^9}, {
   3.631463896670168*^9, 3.631463902371943*^9}, 3.631463948970786*^9, {
   3.631463979425815*^9, 3.631463995736273*^9}, {3.6314640336494827`*^9, 
   3.6314641200991488`*^9}, {3.6314642208727217`*^9, 3.6314642450517178`*^9}, 
   3.631469799644857*^9, {3.631469984802446*^9, 3.631470061045828*^9}, {
   3.631472250653201*^9, 3.631472261769651*^9}, {3.631472634666017*^9, 
   3.63147273336357*^9}, {3.6314727667214403`*^9, 3.631472812710689*^9}, {
   3.6314728437764063`*^9, 3.631472853325428*^9}, {3.631472888678329*^9, 
   3.6314729110931797`*^9}, {3.6314731499154*^9, 3.631473151944347*^9}, {
   3.631536858118425*^9, 3.631536974245165*^9}, 3.631537009629674*^9, {
   3.6315370476706133`*^9, 3.6315370740800056`*^9}, {3.631537104266694*^9, 
   3.631537108565847*^9}, {3.6315375586275167`*^9, 3.6315375667133627`*^9}, {
   3.631537612466167*^9, 3.631537613081254*^9}, {3.6316346184136868`*^9, 
   3.63163465380927*^9}, {3.6316347032080183`*^9, 3.6316348094328547`*^9}, 
   3.6316348487122803`*^9, {3.631634890446269*^9, 3.631634893814334*^9}, {
   3.631635332650824*^9, 3.631635373607038*^9}, {3.631635750341152*^9, 
   3.631635762860239*^9}, {3.6316361118841953`*^9, 3.631636207285839*^9}, {
   3.631637465529758*^9, 3.631637468373621*^9}, {3.631720398899125*^9, 
   3.631720405743457*^9}, {3.631720561265856*^9, 3.631720577648378*^9}, {
   3.63172066242188*^9, 3.631720666043708*^9}, {3.631720824956338*^9, 
   3.63172083890864*^9}, {3.631720878212511*^9, 3.631720880664631*^9}, {
   3.631720985902676*^9, 3.631720989266903*^9}, {3.631722751133938*^9, 
   3.631722797237199*^9}, {3.631722949679195*^9, 3.631722949964785*^9}, {
   3.63172303465598*^9, 3.631723039601185*^9}, {3.6317230839292192`*^9, 
   3.631723110158289*^9}, {3.631723142366*^9, 3.631723145653104*^9}, {
   3.631723176824144*^9, 3.631723233402643*^9}, {3.631723374122257*^9, 
   3.631723378758871*^9}, {3.631724792736157*^9, 3.63172479354144*^9}, {
   3.631724899626877*^9, 3.631724914833673*^9}, 3.631724973437446*^9, {
   3.631803364855302*^9, 3.631803367932201*^9}, {3.631806751414978*^9, 
   3.63180675677949*^9}, {3.631806831637743*^9, 3.631806833804934*^9}, {
   3.631806886091838*^9, 3.6318068888354397`*^9}, {3.631807044494051*^9, 
   3.631807047303863*^9}, {3.6318072356614733`*^9, 3.631807241240456*^9}, {
   3.631876580691614*^9, 3.631876598594902*^9}, {3.6318772150721817`*^9, 
   3.631877218475401*^9}, {3.631962262519423*^9, 3.631962298243692*^9}, {
   3.632046866530555*^9, 3.632046871568482*^9}, {3.632047365263524*^9, 
   3.632047423281815*^9}, {3.632066661798792*^9, 3.6320666718486347`*^9}, {
   3.632066764829298*^9, 3.6320667665863028`*^9}, {3.632066852492674*^9, 
   3.63206687100261*^9}, 3.632256466814683*^9, {3.632256556477208*^9, 
   3.6322565710658216`*^9}, {3.632256871531988*^9, 3.632256926259632*^9}, {
   3.632256976025621*^9, 3.632256978374608*^9}, {3.6322617140905447`*^9, 
   3.6322617615059643`*^9}, {3.6322628276661463`*^9, 
   3.6322628816392384`*^9}, {3.6322629352348547`*^9, 3.632263027420044*^9}, {
   3.632263637980938*^9, 3.632263670980774*^9}, {3.632263805116811*^9, 
   3.63226381553738*^9}, {3.632263943122085*^9, 3.632263963825371*^9}, {
   3.6322640124312887`*^9, 3.63226401290987*^9}, {3.6322640445175533`*^9, 
   3.632264044971552*^9}, {3.632324782628819*^9, 3.632324785031179*^9}, {
   3.632327693806326*^9, 3.632327727742708*^9}, 3.6323279287669897`*^9, {
   3.632328061506269*^9, 3.632328063849663*^9}, 3.632328100955537*^9, {
   3.63232820160305*^9, 3.632328237739354*^9}, {3.6323283500046587`*^9, 
   3.632328384371174*^9}, {3.63232898769409*^9, 3.632329001971725*^9}, {
   3.6323291445807467`*^9, 3.632329144938376*^9}, {3.632329230374905*^9, 
   3.632329232683902*^9}, {3.6323292747050037`*^9, 3.6323292834312677`*^9}, {
   3.632329920957432*^9, 3.6323300001557817`*^9}, {3.632331197988386*^9, 
   3.632331237856093*^9}, {3.63233126921327*^9, 3.6323313159949636`*^9}, {
   3.632331458955941*^9, 3.6323316019863653`*^9}, {3.632331667870088*^9, 
   3.632331677510118*^9}, {3.6323317584101763`*^9, 3.632331788301467*^9}, 
   3.6327582766377373`*^9, 3.632758313810989*^9, {3.6327583831136627`*^9, 
   3.6327583894492283`*^9}}]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Condensed",
WindowSize->{721, 803},
WindowMargins->{{55, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 334, 8, 33, "Input"],
Cell[CellGroupData[{
Cell[917, 32, 99, 1, 38, "Section"],
Cell[1019, 35, 341, 7, 17, "Input"],
Cell[1363, 44, 504, 13, 18, "Input"],
Cell[1870, 59, 4028, 66, 62, "Input"],
Cell[CellGroupData[{
Cell[5923, 129, 568, 12, 32, "Input"],
Cell[6494, 143, 359, 8, 17, "Output"],
Cell[6856, 153, 287, 5, 17, "Output"]
}, Open  ]],
Cell[7158, 161, 6213, 123, 161, "Input"],
Cell[CellGroupData[{
Cell[13396, 288, 3322, 50, 33, "Input"],
Cell[16721, 340, 364, 7, 25, "Print"],
Cell[17088, 349, 238, 3, 17, "Output"]
}, Open  ]],
Cell[17341, 355, 6110, 113, 245, "Input"],
Cell[CellGroupData[{
Cell[23476, 472, 3616, 54, 33, "Input"],
Cell[CellGroupData[{
Cell[27117, 530, 366, 7, 25, "Print"],
Cell[27486, 539, 416, 8, 20, "Print"],
Cell[27905, 549, 385, 8, 25, "Print"],
Cell[28293, 559, 488, 9, 20, "Print"]
}, Open  ]],
Cell[28796, 571, 233, 3, 17, "Output"]
}, Open  ]],
Cell[29044, 577, 1071, 26, 62, "Input"],
Cell[CellGroupData[{
Cell[30140, 607, 915, 25, 47, "Input"],
Cell[31058, 634, 23178, 392, 138, "Output"]
}, Open  ]],
Cell[54251, 1029, 1095, 25, 62, "Input"],
Cell[CellGroupData[{
Cell[55371, 1058, 818, 22, 47, "Input"],
Cell[56192, 1082, 26399, 445, 138, "Output"]
}, Open  ]],
Cell[82606, 1530, 2863, 73, 203, "Input"],
Cell[CellGroupData[{
Cell[85494, 1607, 741, 23, 67, "Input"],
Cell[86238, 1632, 232, 3, 17, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86507, 1640, 690, 20, 67, "Input"],
Cell[87200, 1662, 231, 3, 17, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87480, 1671, 167, 2, 38, "Section"],
Cell[87650, 1675, 5335, 127, 343, "Input"],
Cell[92988, 1804, 5302, 136, 399, "Input"],
Cell[98293, 1942, 5225, 125, 343, "Input"],
Cell[103521, 2069, 2014, 48, 149, "Input"],
Cell[CellGroupData[{
Cell[105560, 2121, 174, 2, 32, "Subsection"],
Cell[105737, 2125, 4574, 71, 62, "Input"],
Cell[110314, 2198, 8199, 158, 229, "Input"],
Cell[118516, 2358, 7682, 141, 201, "Input"],
Cell[126201, 2501, 5318, 88, 115, "Input"],
Cell[131522, 2591, 5369, 89, 115, "Input"],
Cell[136894, 2682, 14643, 298, 546, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151574, 2985, 172, 2, 32, "Subsection"],
Cell[151749, 2989, 7056, 163, 288, "Input"],
Cell[158808, 3154, 4120, 91, 117, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162965, 3250, 137, 1, 32, "Subsection"],
Cell[163105, 3253, 2743, 70, 184, "Input"],
Cell[165851, 3325, 3841, 90, 203, "Input"],
Cell[169695, 3417, 4443, 82, 223, "Input"],
Cell[174141, 3501, 10547, 195, 204, "Input"],
Cell[184691, 3698, 14904, 314, 518, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
